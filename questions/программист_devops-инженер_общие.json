{
	"category_full_form": "Программист_DevOps инженер_Общие",
	"category_human_form": "DevOps инженер",
	"category_filename_form": "программист_devops-инженер_общие",
	"questions": [
		{
			"question": "Какие анти-паттерны DevOps?",
			"right_answer": "Паттерны - это общепринятые практики, которые обычно следуются организациями. Анти-паттерн формируется, когда организация продолжает слепо следовать паттерну, принятому другими, но который не работает для них. Некоторые мифы о DevOps включают: Невозможно выполнять DevOps → У вас неправильные люди, DevOps ⇒ Управление производством выполняется разработчиками, Решение всех проблем организации ⇒ DevOps, DevOps == Процесс, DevOps == Agile, Невозможно выполнять DevOps → Организация уникальна, Для DevOps нужно создать отдельную группу."
		},
		{
			"question": "Что такое Selenium IDE?",
			"right_answer": "Интегрированная среда разработки Selenium (IDE) - это все в одном окружении разработки сценариев Selenium. Ее можно использовать для отладки тестов, изменения и записи, а также она доступна как расширение для Firefox. Selenium IDE поставляется с полным ядром Selenium, которое позволяет быстро и легко воспроизводить и записывать тесты в точной среде, где они будут проводиться. Selenium IDE - лучшее окружение для создания тестов Selenium, независимо от стиля тестирования, благодаря возможности быстрого перемещения инструкций и поддержке автозаполнения."
		},
		{
			"question": "Как можно скопировать Jenkins с одного сервера на другой?",
			"right_answer": "Переместите задачу с одной установки Jenkins на другую, скопировав соответствующий каталог задачи. Создайте копию существующей задачи, создав клон каталога задачи с другим именем. Переименуйте существующую задачу, переименовав каталог."
		},
		{
			"question": "Какие различные компоненты Selenium?",
			"right_answer": "У Selenium есть следующие компоненты: Selenium Integrated Development Environment (IDE), Selenium Remote Control (RC), Selenium WebDriver, Selenium Grid."
		},
		{
			"question": "Каковы преимущества автоматизированного тестирования?",
			"right_answer": "Некоторые из преимуществ автоматизированного тестирования:\n\n- Помогает экономить деньги и время.\n- Можно легко выполнить неуправляемое выполнение.\n- Огромные матрицы тестов могут быть легко протестированы.\n- Включено параллельное выполнение.\n- Снижение ошибок, вызванных человеком, что приводит к улучшению точности.\n- Поддерживается выполнение повторяющихся задач тестирования."
		},
		{
			"question": "Назовите три механизма безопасности, которые Jenkins использует для аутентификации пользователей.",
			"right_answer": "Jenkins использует внутреннюю базу данных для хранения данных пользователей и учетных данных. Jenkins может использовать Lightweight Directory Access Protocol (LDAP) сервер для аутентификации пользователей. Jenkins может быть настроен для использования механизма аутентификации, который использует развернутый сервер приложений."
		},
		{
			"question": "В чем разница между Git и SVN?",
			"right_answer": "Git - это распределенная система контроля версий, в то время как SVN - централизованная система контроля версий."
		},
		{
			"question": "Как запустить несколько контейнеров с использованием одной службы?",
			"right_answer": "Вы можете запустить несколько контейнеров как одну службу с помощью Docker Compose. Здесь каждый контейнер работает изолированно, но может взаимодействовать друг с другом. Все файлы Docker Compose являются файлами YAML."
		},
		{
			"question": "Как вы будете подходить к проекту, который требует внедрения DevOps?",
			"right_answer": "Для внедрения DevOps в конкретном проекте можно использовать следующие стандартные подходы:\n Этап 1 - Оценка существующего процесса и реализации в течение двух-трех недель для выявления областей улучшения, чтобы команда могла создать план внедрения.\nЭтап 2 - Создание концепции (PoC). После ее принятия и утверждения команда может начать фактическую реализацию и внедрение плана проекта.\nЭтап 3 - Проект теперь готов к внедрению DevOps с использованием контроля версий/интеграции/тестирования/развертывания/доставки и мониторинга, следуя шаг за шагом. Следуя правильным шагам по контролю версий, интеграции, тестированию, развертыванию, доставке и мониторингу, проект теперь готов к внедрению DevOps."
		},
		{
			"question": "Объясните основной файл конфигурации и его расположение в Nagios.",
			"right_answer": "Основной файл конфигурации состоит из нескольких директив, которые влияют на работу Nagios. Процесс Nagios и CGIs читают файл конфигурации. Образец основного файла конфигурации будет размещен в вашем каталоге настроек: /usr/local/Nagios/etc/resource.cfg"
		},
		{
			"question": "Что такое активные и пассивные проверки в Nagios?",
			"right_answer": "Nagios способен мониторить хосты и сервисы двумя способами: Активные проверки инициируются в результате процесса Nagios и регулярно запланированы. Пассивные проверки инициируются и выполняются через внешние приложения/процессы, с результатами, отправленными в Nagios для обработки."
		},
		{
			"question": "Какой процесс отката коммита, который уже был отправлен и сделан публичным?",
			"right_answer": "Существует два способа откатить коммит: Удалите или исправьте плохой файл в новом коммите и отправьте его в удаленный репозиторий. Затем зафиксируйте его в удаленном репозитории, используя: git commit -m 'сообщение коммита'. Создайте новый коммит, который отменяет все изменения, сделанные в плохом коммите, используя git revert <идентификатор коммита>."
		},
		{
			"question": "Как вы загружаете файл с локальной системы в репозиторий GitHub, используя Git?",
			"right_answer": "Сначала подключите локальный репозиторий к удаленному репозиторию: git remote add origin [скопированный веб-адрес] // Например: git remote add origin https://github.com/example/test.git Затем загрузите свой файл в удаленный репозиторий: git push origin master"
		},
		{
			"question": "Почему непрерывное тестирование важно для DevOps?",
			"right_answer": "Любое изменение в коде может быть немедленно протестировано с помощью непрерывного тестирования. Это предотвращает проблемы с качеством и задержки в релизах, которые могут возникнуть, если тестирование откладывается до конца цикла. Таким образом, непрерывное тестирование позволяет выпускать продукт более качественно и чаще."
		}
	]
}
