{
    "category_full_form": "Программист_Full Stack разработчик_Backend часть_C# + .NET Core",
    "category_human_form": "Full Stack разработчик_C# + .NET Core",
    "category_filename_form": "программист_full-stack-разработчик_backend-часть_c-net-core",
    "questions": [
        {
            "question": "Напишите особенности обобщений в C#?",
            "right_answer": "Обобщения - это техника улучшения вашей программы различными способами, включая создание обобщенных классов и повторное использование кода."
        },
        {
            "question": "В чем разница между System.Array.CopyTo() и System.Array.Clone()?",
            "right_answer": "В методе Clone() создается новый массив объектов со всеми оригинальными элементами массива, используя метод CopyTo(). По сути, все элементы, присутствующие в существующем массиве, копируются в другой существующий массив."
        },
        {
            "question": "Какие существуют классы ввода-вывода в C#?",
            "right_answer": "В C# пространство имен System.IO содержит несколько классов, которые используются для выполнения различных операций с файлами, таких как создание, удаление, закрытие и открытие."
        },
        {
            "question": "Что такое консольное приложение?",
            "right_answer": "Приложение, которое может запускаться в окне командной строки, называется консольным приложением."
        },
        {
            "question": "Что такое перегрузка методов?",
            "right_answer": "Перегрузка методов - это процесс создания множества методов в одном классе с одинаковым именем, но различными сигнатурами. Компилятор использует разрешение перегрузки, чтобы определить, какой метод вызвать при компиляции."
        },
        {
            "question": "Что вы понимаете под свойствами Get и Set Accessor?",
            "right_answer": "В C# Get и Set называются аксессорами, потому что они используют свойства. Такие приватные поля доступны через аксессоры."
        },
        {
            "question": "Укажите основные особенности C# кратко.",
            "right_answer": "Некоторые из основных особенностей C# - C# является языком с безопасной типизацией и управляемым кодом. C# ориентирован на объекты. C# - дружелюбный кроссплатформенный язык. C# - платформонезависимый язык при компиляции. C# - общего назначения. C# используется для реализации деструкторов и конструкторов. C# является частью .NET-фреймворка. C# - легкий для изучения и понимания язык. C# - структурированный язык."
        },
        {
            "question": "Как использовать nullable типы в .Net?",
            "right_answer": "Когда типы значений могут принимать как обычные значения, так и значение null, их называют nullable типами."
        },
        {
            "question": "В чем разница между read-only и константами?",
            "right_answer": "Во время компиляции константные переменные объявляются и инициализируются. Позже невозможно изменить это конкретное значение. С другой стороны, read-only используется после присвоения значения во время выполнения."
        },
        {
            "question": "В чем разница между переопределением метода и перегрузкой метода?",
            "right_answer": "При переопределении метода соответствующее определение метода заменяется в производном классе, что изменяет поведение метода. Когда речь идет о перегрузке метода, создается метод с тем же именем и находится в том же классе, но имеет разные сигнатуры."
        },
        {
            "question": "Что такое типы значений и ссылочные типы?",
            "right_answer": "Тип значения содержит значение данных внутри своего пространства памяти. Ссылочный тип, с другой стороны, хранит адрес объекта, где хранится значение. Это, по сути, указатель на другое местоположение в памяти."
        },
        {
            "question": "Что такое объект?",
            "right_answer": "Объект - это экземпляр класса, который можно использовать для доступа к методам класса. Ключевое слово 'New' можно использовать для создания объекта."
        },
        {
            "question": "В чем разница между SortedList и SortedDictionary в C#?",
            "right_answer": "SortedList - это коллекция пар значений, отсортированных по ключам. SortedDictionary - это коллекция для хранения пар значений в отсортированной форме, при этом сортировка происходит по ключу."
        },
        {
            "question": "В чем разница между параметрами out и ref?",
            "right_answer": "Когда аргумент передается как ref, он должен быть инициализирован перед передачей в метод. Параметр out, с другой стороны, не требуется инициализировать перед передачей в метод."
        },
        {
            "question": "Что произойдет, если имена методов в унаследованных интерфейсах конфликтуют?",
            "right_answer": "Проблема может возникнуть, когда методы из различных интерфейсов ожидают разные данные. Но когда речь идет о самом компиляторе, проблем не должно возникнуть."
        }
    ]
}