{
	"category_full_form": "Программист_Backend разработчик_JavaScript_язык JavaScript",
	"category_human_form": "Backend разработчик_JavaScript",
	"category_filename_form": "программист_backend-разработчик_javascript_язык-javascript",
	"questions": [
		{
			"question": "Что такое Temporal Dead Zone?",
			"right_answer": "Temporal Dead Zone - это поведение, которое происходит с переменными, объявленными с использованием ключевых слов let и const. Это поведение, когда мы пытаемся получить доступ к переменной до ее инициализации."
		},
		{
			"question": "Объясните Scope и Scope Chain в JavaScript.",
			"right_answer": "Scope в JS определяет доступность переменных и функций в различных частях кода."
		},
		{
			"question": "Что такое DOM?",
			"right_answer": "DOM расшифровывается как Document Object Model. DOM - это программный интерфейс для HTML и XML документов. Когда браузер пытается отобразить HTML документ, он создает объект на основе HTML документа, называемый DOM. Используя этот DOM, мы можем манипулировать или изменять различные элементы внутри HTML документа."
		},
		{
			"question": "Что такое мемоизация?",
			"right_answer": "Мемоизация - это форма кэширования, при которой возвращаемое значение функции кэшируется на основе ее параметров. Если параметр этой функции не изменен, возвращается кэшированная версия функции."
		},
		{
			"question": "Объясните неявное приведение типов в JavaScript.",
			"right_answer": "Неявное приведение типов в JavaScript - это автоматическое преобразование значения из одного типа данных в другой. Оно происходит, когда операнды выражения имеют разные типы данных."
		},
		{
			"question": "В чем разница между прототипным и классическим наследованием?",
			"right_answer": "Программисты создают объекты, которые являются представлениями сущностей реального времени, в традиционном ОО программировании. Классы и объекты - два вида абстракций. Класс является обобщением объекта, в то время как объект является абстракцией реального объекта. Например, Транспортное средство - это специализация Автомобиля. В результате, автомобили (класс) происходят от транспортных средств (объект).\n\nКлассическое наследование отличается от прототипного наследования тем, что классическое наследование ограничено классами, которые наследуются от других классов, в то время как прототипное наследование позволяет любому объекту быть клонированным с помощью метода связывания объектов. Несмотря на слишком многочисленные детали, прототип в основном служит шаблоном для других объектов, независимо от того, расширяют ли они родительский объект или нет."
		},
		{
			"question": "Что такое классы в JavaScript?",
			"right_answer": "Введенные в версии ES6, классы представляют собой ничто иное, как синтаксический сахар для конструкторных функций. Они предоставляют новый способ объявления конструкторных функций в JavaScript."
		},
		{
			"question": "Что вы понимаете под самовызывающимися функциями?",
			"right_answer": "Без запроса самовызывающееся выражение автоматически вызывается (инициируется). Если за выражением функции следует (), оно будет выполнено автоматически. Объявление функции не может быть вызвано само по себе."
		},
		{
			"question": "Какова роль отложенных скриптов в JavaScript?",
			"right_answer": "Обработка HTML-кода во время загрузки страницы отключается по умолчанию, пока скрипт не остановится. Ваша страница будет замедлена, если ваша сеть немного медленная или если скрипт очень громоздкий. Когда вы используете отложенный режим, скрипт ждет завершения парсера HTML перед его выполнением. Это сокращает время загрузки веб-страниц, позволяя им появляться быстрее."
		},
		{
			"question": "В чем разница между методами exec() и test() в JavaScript?",
			"right_answer": "test() и exec() - это методы выражения RegExp, используемые в JavaScript. Мы используем exec() для поиска строки по определенному шаблону, и если он находит его, он вернет шаблон напрямую; в противном случае он вернет 'пустой' результат. Мы используем test() для поиска строки по определенному шаблону. Он вернет логическое значение 'true', если найдет указанный текст, в противном случае вернет 'false'."
		},
		{
			"question": "Является ли JavaScript статически типизированным или динамически типизированным языком?",
			"right_answer": "JavaScript является динамически типизированным языком. В динамически типизированном языке тип переменной проверяется во время выполнения, в отличие от статически типизированного языка, где тип переменной проверяется во время компиляции."
		},
		{
			"question": "Какие различия между объявлением переменных с использованием var, let и const?",
			"right_answer": "До версии ES6 javascript использовался только ключевое слово var для объявления переменных. С версией ES6 были введены ключевые слова let и const для объявления переменных."
		},
		{
			"question": "Что такое каррирование в JavaScript?",
			"right_answer": "Каррирование - это передовая техника преобразования функции с аргументами n в n функций с одним или меньшим количеством аргументов."
		},
		{
			"question": "Что такое Immediately Invoked Function в JavaScript?",
			"right_answer": "Immediately Invoked Function (IIFE) - это функция, которая запускается сразу после определения."
		}
	]
}
