{
    "category_full_form": "Программист_Backend разработчик_Docker",
    "category_human_form": "Backend разработчик_Docker",
    "category_filename_form": "программист_backend-разработчик_docker",
    "questions": [
        {
            "question": "Есть ли у Docker какие-либо недостатки?",
            "right_answer": "Docker не идеален. У него есть свои недостатки, включая: отсутствие опции хранения, неидеальные варианты мониторинга, невозможность автоматического переназначения неактивных узлов, сложная настройка автоматического горизонтального масштабирования."
        },
        {
            "question": "Опишите жизненный цикл контейнера Docker.",
            "right_answer": "Обычно жизненный цикл контейнера Docker включает: Создание контейнера, Запуск контейнера, Приостановка контейнера, Возобновление контейнера, Запуск контейнера, Остановка контейнера, Перезапуск контейнера, Уничтожение контейнера."
        },
        {
            "question": "Как найти сохраненные тома Docker?",
            "right_answer": "Используйте команду: /var/lib/docker/volumes"
        },
        {
            "question": "Объясните виртуализацию.",
            "right_answer": "Виртуализация - это способ использования программного обеспечения (например, гипервизора) для создания виртуальной версии ресурса, такого как сервер, хранилище данных или приложение. Виртуализация позволяет разделить систему на ряд отдельных секций, каждая из которых действует как отдельная индивидуальная система."
        },
        {
            "question": "Почему кто-то должен использовать Docker? Что он предлагает?",
            "right_answer": "Docker предоставляет пользователям много стимулов для принятия, такие как: эффективный и простой опыт начальной настройки, средства описания жизненного цикла приложения в деталях, простая конфигурация и плавное взаимодействие с Docker Compose, полная и подробная документация, возможность запуска на ПК или корпоративной ИТ-системе с равной легкостью."
        },
        {
            "question": "Назовите основные команды Docker и их назначение.",
            "right_answer": "Самые важные команды Docker: Build, Commit, Create, Dockerd, Kill. Build создает файл образа Docker, Commit создает новый образ из изменений контейнера, Create создает новый контейнер, Dockerd запускает демон Docker, Kill уничтожает контейнер."
        },
        {
            "question": "На каких платформах можно запустить Docker?",
            "right_answer": "Docker может работать на различных платформах Linux, таких как ArchLinux, CentOS 6+, CRUX 3.0+, Fedora 19/20+, Gentoo, openSUSE 12.3+, RHEL 6.5+, Ubuntu 12.04, 13.04 и др., а также на облачных платформах, таких как Amazon EC2, Amazon ECS, Google Compute Engine, Microsoft Azure, Rackspace."
        },
        {
            "question": "Перечислите некоторые более продвинутые команды Docker и что они делают.",
            "right_answer": "Некоторые продвинутые команды включают: Docker info (отображает информацию о системе), Docker pull (загружает образ), Docker stats (предоставляет информацию о контейнере), Docker images (показывает загруженные образы)."
        },
        {
            "question": "Что такое Docker?",
            "right_answer": "Docker - это платформа контейнеризации с открытым исходным кодом. Она используется для автоматизации развертывания любого приложения с использованием легких, портативных контейнеров."
        },
        {
            "question": "Как создать Docker swarm?",
            "right_answer": "Используйте следующую команду: docker swarm init –advertise-addr <manager IP>"
        },
        {
            "question": "Какой метод лучше всего для удаления контейнера: команда «остановить контейнер», за которой следует команда «удалить контейнер», или команда rm сама по себе?",
            "right_answer": "Сначала остановите контейнер, затем удалите его. Вот как: $ docker stop <container_id> $ docker rm -f <container_id>"
        },
        {
            "question": "Как проверить версии Docker Client и Server?",
            "right_answer": "Эта команда даст вам всю необходимую информацию: $ docker version"
        },
        {
            "question": "Какая команда для остановки контейнера?",
            "right_answer": "Используйте следующую команду: $ sudo docker stop <container name>"
        },
        {
            "question": "Можно ли потерять данные, хранящиеся в контейнере?",
            "right_answer": "Любые данные, хранящиеся в контейнере, остаются там, пока вы не удалите контейнер."
        },
        {
            "question": "Что такое метки объектов Docker?",
            "right_answer": "Метки - это механизм применения метаданных к объектам Docker, таким как контейнеры, образы, локальные демоны, сети, тома и узлы."
        }
    ]
}