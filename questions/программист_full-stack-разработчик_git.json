{
    "category_full_form": "Программист_Full Stack разработчик_Git",
    "category_human_form": "Full Stack разработчик_Git",
    "category_filename_form": "программист_full-stack-разработчик_git",
    "questions": [
        {
            "question": "Каково различие между `HEAD`, `рабочим деревом` и `индексом` в Git?",
            "right_answer": "`HEAD` относится к последнему коммиту в текущей ветке, `рабочее дерево` - это набор файлов в вашем каталоге, а `индекс` (или область подготовки) - это область подготовки для коммитов."
        },
        {
            "question": "Что такое `git blame` и как его использовать?",
            "right_answer": "`git blame` показывает, какая ревизия и автор последний раз модифицировали каждую строку файла. Это полезно для отслеживания изменений и определения, кто их сделал."
        },
        {
            "question": "Что такое быстрое объединение (fast-forward merge) в Git?",
            "right_answer": "Быстрое объединение происходит, когда конечная точка целевой ветки отстает от конечной точки объединенной ветки, позволяя целевой ветке 'догнать' просто перемещаясь вперед к конечной точке объединенной ветки."
        },
        {
            "question": "Как обновить подмодуль?",
            "right_answer": "Используйте `git submodule update --remote`, чтобы загрузить и обновить ваши подмодули."
        },
        {
            "question": "Что делает `git reset`?",
            "right_answer": "`git reset` используется для отмены изменений. У него есть три основных режима: `--soft`, `--mixed` и `--hard`."
        },
        {
            "question": "Как игнорировать изменения в отслеживаемом файле?",
            "right_answer": "Используйте `git update-index --assume-unchanged <file>` для временного игнорирования изменений в отслеживаемом файле."
        },
        {
            "question": "Что такое `git checkout`?",
            "right_answer": "`git checkout` позволяет перемещаться между различными ветками или откатывать файлы рабочего дерева к предыдущему состоянию. Однако, в последних версиях Git рекомендуется использовать `git switch` для смены веток и `git restore` для отката файлов, каждая из которых предназначена для выполнения конкретных функций."
        },
        {
            "question": "Что такое слияние (merge) в Git?",
            "right_answer": "Слияние (merge) - это операция в Git, которая интегрирует изменения из одной ветки в другую. Это может быть быстрое слияние (fast-forward merge), когда целевая ветка обновляется до последнего коммита в исходной ветке, или трехстороннее слияние (three-way merge), когда различные истории веток объединяются в новый коммит."
        },
        {
            "question": "Как найти коммит по сообщению?",
            "right_answer": "Используйте `git log --grep=<search-pattern>` для поиска по сообщениям коммитов."
        },
        {
            "question": "Что такое HEAD в Git?",
            "right_answer": "HEAD - это ссылка на последний коммит в текущей ветке, которая была проверена."
        },
        {
            "question": "Как очистить неотслеживаемые файлы из вашего рабочего каталога?",
            "right_answer": "Используйте `git clean` для удаления неотслеживаемых файлов из вашего рабочего каталога."
        },
        {
            "question": "Объясните стратегию ветвления Git, которую вы используете.",
            "right_answer": "Одной из распространенных стратегий является Git Flow, которая включает в себя основную ветку, ветку разработки, ветки функций, ветки релизов и ветки исправлений, каждая из которых служит различной цели в цикле разработки."
        },
        {
            "question": "Что такое `git archive`?",
            "right_answer": "`git archive` используется для создания архива (zip или tar) файлов из указанного дерева."
        },
        {
            "question": "Что такое `git reset --soft`?",
            "right_answer": "`git reset --soft <commit-hash>` отменяет коммиты, но оставляет изменения в области подготовки (staging area)."
        },
        {
            "question": "Что такое `git rebase --interactive`?",
            "right_answer": "`git rebase --interactive` позволяет вам изменять коммиты различными способами, такими как переписывание, объединение и удаление коммитов более контролируемым способом."
        }
    ]
}