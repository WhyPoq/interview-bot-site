{
    "category_full_form": "Программист_Full Stack разработчик_Git",
    "category_human_form": "Full Stack разработчик_Git",
    "category_filename_form": "программист_full-stack-разработчик_git",
    "questions": [
        {
            "question": "Что такое Git?",
            "right_answer": "Git - это децентрализованная система контроля версий, разработанная для быстрого и эффективного управления проектами различного масштаба. Она поддерживает совместные усилия среди разработчиков, отслеживая изменения файлов и улучшая командную работу."
        },
        {
            "question": "Что делает `git commit --dry-run`?",
            "right_answer": "Это моделирует коммит, показывая, что будет зафиксировано без фактического фиксации изменений."
        },
        {
            "question": "Как клонировать репозиторий?",
            "right_answer": "Для создания локальной копии репозитория на вашем компьютере выполните команду `git clone <repository_url>`. Это действие дублирует репозиторий локально."
        },
        {
            "question": "Как найти, кто внес строку кода с использованием Git?",
            "right_answer": "Используйте `git blame <file-name>` чтобы увидеть, кто последний раз модифицировал каждую строку файла."
        },
        {
            "question": "Как переименовать ветку Git?",
            "right_answer": "Чтобы переименовать текущую ветку, используйте `git branch -m <new_name>`. Чтобы переименовать другую ветку, используйте `git branch -m <old_name> <new_name>`."
        },
        {
            "question": "Как удалить файл из Git, не удаляя его из файловой системы?",
            "right_answer": "Используйте `git rm --cached <file_name>` для удаления файла из Git без удаления его из файловой системы."
        },
        {
            "question": "Что такое коммит в Git?",
            "right_answer": "В Git коммит - это процесс, который записывает версию в настоящее время подготовленных модификаций проекта. Эта запись включает в себя детали внесенных изменений, уникальный идентификатор (хэш SHA-1), идентификатор создателя и временную метку коммита."
        },
        {
            "question": "Что такое detached HEAD в Git?",
            "right_answer": "Detached HEAD возникает, когда вы переключаетесь на коммит, ветку или тег, который не является последним коммитом ветки."
        },
        {
            "question": "Что такое `git rebase`?",
            "right_answer": "`git rebase` перемещает изменения из одной ветки в другую, позволяя создать упрощенную временную линию проекта, перемещая обновления ветки функций на передний план основной ветки."
        },
        {
            "question": "Что такое `git reflog`?",
            "right_answer": "`git reflog` показывает журнал перемещений указателя HEAD и веток, позволяя вам вернуться к предыдущим состояниям."
        },
        {
            "question": "Как откатить коммит, который уже был отправлен и сделан публичным?",
            "right_answer": "Чтобы отменить изменения, внесенные предыдущим коммитом, обеспечивая безопасность для публичных коммитов, используйте `git revert <commit_hash>`, который генерирует новый коммит, отменяющий ранее внесенные изменения. С другой стороны, `git reset` позволяет вернуться к предыдущему состоянию; однако будьте осторожны при его применении к публичным коммитам, так как это изменяет историю коммитов."
        },
        {
            "question": "Что такое HEAD в Git?",
            "right_answer": "HEAD - это ссылка на последний коммит в текущей ветке, которая была проверена."
        },
        {
            "question": "Что такое `git archive`?",
            "right_answer": "`git archive` используется для создания архива (zip или tar) файлов из указанного дерева."
        },
        {
            "question": "Что такое `git push`?",
            "right_answer": "`git push` используется для загрузки содержимого локального репозитория в удаленный репозиторий. Он передает коммиты из вашего локального репо на удаленный."
        },
        {
            "question": "Что такое `git stash`?",
            "right_answer": "Команда `git stash` временно сохраняет модификации вашего рабочего каталога, позволяя вам переключаться между ветками без потери текущего прогресса."
        }
    ]
}