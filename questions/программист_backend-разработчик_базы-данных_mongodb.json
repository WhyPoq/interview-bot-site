{
    "category_full_form": "Программист_Backend разработчик_Базы данных_MongoDB",
    "category_human_form": "Backend разработчик_MongoDB",
    "category_filename_form": "программист_backend-разработчик_базы-данных_mongodb",
    "questions": [
        {
            "question": "Как MongoDB интегрируется с другими инструментами анализа данных?",
            "right_answer": "MongoDB может интегрироваться с различными инструментами анализа данных и фреймворками через коннекторы, драйверы и плагины. Популярные инструменты, такие как Apache Spark и Hadoop, имеют коннекторы для данных MongoDB."
        },
        {
            "question": "Что такое набор реплик в MongoDB?",
            "right_answer": "Это группа серверов, которые поддерживают одни и те же данные. Он обеспечивает избыточность данных и высокую доступность. Один сервер действует как основной, в то время как другие являются вторичными серверами, которые реплицируют данные с основного."
        },
        {
            "question": "Как вы управляете масштабными миграциями данных в MongoDB?",
            "right_answer": "Для масштабных миграций данных используйте инструменты, такие как MongoDB Atlas Data Lake или решения для конвейера данных, например Apache Kafka. Планируйте проверку и верификацию данных для обеспечения целостности данных."
        },
        {
            "question": "Какова роль ключа шардирования в MongoDB?",
            "right_answer": "Ключ шардирования определяет, как данные распределяются по нескольким шардам (разделам базы данных) в шардированном кластере. MongoDB использует поле в документе, чтобы определить, какой шард должен хранить документ. Выбор подходящего ключа шардирования критичен для равномерного распределения данных и эффективных запросов."
        },
        {
            "question": "Какова роль хранилищного движка WiredTiger в MongoDB?",
            "right_answer": "С версии 3.2 MongoDB WiredTiger выступает в качестве основного хранилищного движка, отвечающего за хранение данных, сжатие и кэширование, тем самым улучшая как производительность, так и параллельность."
        },
        {
            "question": "Как вы обеспечиваете целостность данных в транзакции MongoDB?",
            "right_answer": "MongoDB поддерживает многодокументные транзакции для обеспечения целостности данных. Вы можете использовать транзакции для группировки нескольких операций в одну единицу работы, обеспечивая атомарность, согласованность, изоляцию и устойчивость (ACID)."
        },
        {
            "question": "Каковы основные особенности MongoDB?",
            "right_answer": "Некоторые важные особенности MongoDB включают гибкость в моделировании данных, горизонтальную масштабируемость, поддержку неструктурированных данных, мощный язык запросов, автоматическое шардирование, высокую доступность с помощью наборов реплик и геопространственные возможности."
        },
        {
            "question": "Как вставить данные в коллекцию MongoDB?",
            "right_answer": "Вы можете вставить данные в коллекцию MongoDB, используя метод `insertOne()` или `insertMany()`. Вы предоставляете документ или массив документов для вставки."
        },
        {
            "question": "Какие стратегии существуют для обеспечения согласованности данных в распределенных развертываниях MongoDB?",
            "right_answer": "В распределенных развертываниях MongoDB вы можете достичь согласованности данных с помощью различных стратегий: Read Preference, Write Concern, Transactions."
        },
        {
            "question": "Как MongoDB обеспечивает высокую доступность?",
            "right_answer": "MongoDB гарантирует надежную доступность с помощью наборов реплик, состоящих из нескольких серверов MongoDB, которые хранят идентичные данные. Эта настройка предлагает избыточность и безперебойные возможности аварийного переключения. В случае отказа первичного узла автоматический процесс выбирает один из вторичных узлов для перехода в режим нового первичного, тем самым обеспечивая бесперебойное обслуживание."
        },
        {
            "question": "Как MongoDB хранит данные?",
            "right_answer": "MongoDB хранит данные в формате BSON (Binary JSON), бинарно закодированной сериализации документов, похожих на JSON. Эти документы хранятся в коллекциях внутри баз данных."
        },
        {
            "question": "Как вы делаете резервное копирование базы данных MongoDB?",
            "right_answer": "Вы можете создать резервную копию базы данных MongoDB, используя инструменты, такие как `mongodump`, или настроив регулярные снимки на уровне файловой системы или кластера."
        },
        {
            "question": "Как MongoDB обрабатывает сетевое разделение и сценарии разделения мозга?",
            "right_answer": "MongoDB использует набор реплик и внутренний алгоритм согласования для обработки сценариев сетевого разделения. В сценариях разделения мозга настройки приоритета и автоматическое восстановление могут помочь поддерживать согласованность данных."
        },
        {
            "question": "Как вы оптимизируете производительность запросов в MongoDB?",
            "right_answer": "Вы можете оптимизировать производительность запросов, создавая соответствующие индексы, используя конвейер агрегации, минимизируя количество запросов и оптимизируя шаблоны запросов для использования планировщика запросов."
        },
        {
            "question": "Что такое ограниченные коллекции в MongoDB?",
            "right_answer": "Ограниченные коллекции - это коллекции фиксированного размера, которые поддерживают порядок вставки данных. Как только коллекция достигает своего размерного предела, старые данные автоматически перезаписываются новыми данными. Они часто используются для ведения журналов и отслеживания событий."
        }
    ]
}