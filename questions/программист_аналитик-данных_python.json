{
	"category_full_form": "Программист_Аналитик данных_Python",
	"category_human_form": "Аналитик данных_Python",
	"category_filename_form": "программист_аналитик-данных_python",
	"questions": [
		{
			"question": "Что такое PYTHONPATH?",
			"right_answer": "Это переменная среды, которая используется при импорте модуля. При импорте модуля PYTHONPATH проверяется, чтобы увидеть, присутствуют ли импортированные модули в различных папках. Она используется интерпретатором для определения, какой модуль загружать."
		},
		{
			"question": "Как использовать print() без перехода на новую строку?",
			"right_answer": "Решение зависит от версии Python, которую вы используете.\n\nPython v2\n\n>>print(“Hi. ”),\n\n>>print(“How are you?”)\n\nВывод: Hi. How are you?\n\nPython v3\n\n>>print(“Hi”,end=“ ”)\n\n>>print(“How are you?”)\n\nВывод: Hi. How are you?"
		},
		{
			"question": "Что такое GIL?",
			"right_answer": "Термин GIL означает Глобальный блокировщик интерпретатора. Это мьютекс, который помогает синхронизации потоков, предотвращая взаимные блокировки путем ограничения доступа к объектам Python. GIL помогает с многозадачностью (а не параллельным вычислениям)."
		},
		{
			"question": "Как достигается многопоточность в Python?",
			"right_answer": "Многопоточность обычно подразумевает, что несколько потоков выполняются параллельно. Глобальный замок интерпретатора Python не позволяет более одного потока удерживать интерпретатор Python в определенный момент времени. Поэтому многопоточность в Python достигается через переключение контекста. Это совершенно отличается от мультипроцессинга, который фактически открывает несколько процессов по всем потокам."
		},
		{
			"question": "Что такое PIP?",
			"right_answer": "PIP обозначает Python Installer Package. Он используется для установки различных модулей Python. Это утилита командной строки, которая создает унифицированный интерфейс для установки различных модулей Python. Он ищет пакет в интернете и устанавливает его в рабочий каталог без необходимости какого-либо вмешательства пользователя."
		},
		{
			"question": "Как происходит объединение dataframe в Pandas?",
			"right_answer": "Способ объединения dataframe в Pandas зависит от типа и полей объединяемых dataframe. Если данные имеют идентичные поля, они объединяются вдоль оси 0, в противном случае они объединяются вдоль оси 1."
		},
		{
			"question": "Что делает оператор 'is'?",
			"right_answer": "Оператор 'is' сравнивает идентификатор двух объектов."
		},
		{
			"question": "Как объединить фреймы данных в Pandas?",
			"right_answer": "Это один из самых часто задаваемых вопросов на собеседованиях по Python. Вот способы, с помощью которых можно объединить фреймы данных в Pandas: Конкатенация их путем вертикального стекинга двух фреймов данных. Конкатенация их путем горизонтального стекинга двух фреймов данных. Объединение их в один столбец"
		},
		{
			"question": "Что такое наследование в Python?",
			"right_answer": "Наследование позволяет одному классу получить все члены другого класса (например, атрибуты и методы). Наследование обеспечивает повторное использование кода, что упрощает разработку и поддержку приложений."
		},
		{
			"question": "В чем разница между .pyc и .py?",
			"right_answer": ".py файлы являются файлами исходного кода для Python. Байт-код python файлов хранится в файлах .pyc, которые создаются при импорте кода из другого источника. Интерпретатор экономит время, преобразуя файлы .py в файлы .pyc."
		},
		{
			"question": "Что такое docstrings?",
			"right_answer": "Docstrings - это строковая документация. Внутри тройных кавычек находятся эти docstrings. Они не присваиваются никакой переменной и, следовательно, могут использоваться как комментарии."
		}
	]
}
