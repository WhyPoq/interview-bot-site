{
    "category_full_form": "Программист_Backend разработчик_PHP + Laravel",
    "category_human_form": "Backend разработчик_PHP + Laravel",
    "category_filename_form": "программист_backend-разработчик_php-laravel",
    "questions": [
        {
            "question": "Каково назначение обратного вызова в PHP?",
            "right_answer": "Обратный вызов - это функция PHP, используемая для выполнения других частей кода, и часто используется для добавления пользовательской функциональности к коду или для предоставления альтернативного способа выполнения кода."
        },
        {
            "question": "Что такое NULL?",
            "right_answer": "NULL - это особый тип значения в PHP. Он представляет собой переменную без значения и обычно используется для обозначения отсутствия сделки."
        },
        {
            "question": "Какие являются общими применениями PHP?",
            "right_answer": "PHP часто используется для выполнения системных функций, обработки форм, задач, связанных с добавлением, удалением и изменением элементов в базе данных, доступа к переменным cookie и установки cookie, ограничения доступа пользователей к некоторым страницам веб-сайта и шифрования данных."
        },
        {
            "question": "Как вы обрабатываете ошибки в PHP?",
            "right_answer": "Ошибки в PHP можно обрабатывать с помощью блоков try, catch и finally для исключений, а также функций error_reporting() и ini_set() для уровней отчетности об ошибках. Кроме того, запись ошибок в файл или базу данных является распространенной практикой."
        },
        {
            "question": "Как объявить переменную в PHP?",
            "right_answer": "Переменные в PHP объявляются с использованием символа $, за которым следует имя переменной. Например: $name = 'John';"
        },
        {
            "question": "Как PHP может взаимодействовать с HTML?",
            "right_answer": "PHP предназначен для взаимодействия с HTML. Возможно встраивание PHP скриптов на HTML страницу без проблем и передача информации из HTML в PHP."
        },
        {
            "question": "Каковы характеристики переменных PHP?",
            "right_answer": "Переменные PHP - это значения, хранящиеся в памяти, которые пользователь может манипулировать. Они хранят данные для определенной цели и могут использоваться в вычислениях и других процессах. Переменные PHP могут быть объявлены с ключевыми словами, такими как 'var,' 'int,' 'float,' и 'array.' После объявления переменной ее можно использовать для хранения значения."
        },
        {
            "question": "Для чего используется функция 'imagetypes()'?",
            "right_answer": "Функция imagetypes() - это встроенная функция PHP, которая используется для определения типов изображений, поддерживаемых текущей версией встроенной библиотеки PHP."
        },
        {
            "question": "Что такое 'Traits'?",
            "right_answer": "Механизм, который позволяет создавать повторно используемый код на PHP и подобных языках, где не поддерживается множественное наследование, называется Traits. Его нельзя создать самостоятельно."
        },
        {
            "question": "Объясните концепцию сессий в PHP. В чем отличие от cookies?",
            "right_answer": "Сессии в PHP - это способ сохранения данных между несколькими запросами для одного пользователя. В отличие от cookies, которые хранят данные на стороне клиента, сессии хранят данные на стороне сервера. Сессии обычно более безопасны, так как данные не передаются клиенту."
        },
        {
            "question": "Какие различия между константами и переменными в PHP?",
            "right_answer": "Одним из наиболее значительных различий между константами и переменными в PHP является их область видимости. В PHP константы являются глобальными, что означает, что они доступны во всех частях приложения, в то время как переменные обычно доступны только в области, где они были объявлены. Кроме того, константы должны быть явно определены перед тем, как их можно использовать, в то время как переменные могут быть использованы без инициализации."
        },
        {
            "question": "Как передать данные с одной PHP-страницы на другую?",
            "right_answer": "Данные могут быть переданы с одной PHP-страницы на другую с использованием методов, таких как параметры URL, отправка формы, сессии, куки или путем хранения данных в базе данных и извлечения их на последующей странице."
        },
        {
            "question": "В чем разница между 'echo' и 'print' в PHP?",
            "right_answer": "Основное различие между 'echo' и 'print' в PHP заключается в том, что 'echo' является языковой конструкцией, а 'print' - функцией. 'echo' также имеет немного лучшую производительность и более лаконичен, что делает его предпочтительным в ситуациях, где важны производительность и размер."
        },
        {
            "question": "Что означает финальный класс и финальный метод?",
            "right_answer": "Финальный класс - это класс, который нельзя расширить или унаследовать. Любые методы, переменные экземпляра и константы внутри класса не могут быть изменены или использованы в другом классе."
        },
        {
            "question": "Как вы обрабатываете сбои выполнения с функциями include() и require()?",
            "right_answer": "Если функция require() не может получить доступ к файлу, то она завершается 'фатальной' ошибкой. Однако, в случае функции include() она выдает предупреждение, и PHP-скрипт продолжает работу."
        }
    ]
}