{
    "category_full_form": "Программист_Backend разработчик_PHP + Laravel",
    "category_human_form": "Backend разработчик_PHP + Laravel",
    "category_filename_form": "программист_backend-разработчик_php-laravel",
    "questions": [
        {
            "question": "Перечислите основные типы ошибок в PHP и объясните их различия.",
            "right_answer": "Существует три основных типа ошибок в PHP: Уведомления (Notices), Предупреждения (Warnings) и Фатальные ошибки (Fatal errors). Уведомления - это не критические ошибки, Предупреждения более критичны, но не прерывают выполнение скрипта, а Фатальные ошибки немедленно завершают выполнение скрипта."
        },
        {
            "question": "Для чего используется функция 'imagetypes()'?",
            "right_answer": "Функция imagetypes() - это встроенная функция PHP, которая используется для определения типов изображений, поддерживаемых текущей версией встроенной библиотеки PHP."
        },
        {
            "question": "Как вы обрабатываете сбои выполнения с функциями include() и require()?",
            "right_answer": "Если функция require() не может получить доступ к файлу, то она завершается 'фатальной' ошибкой. Однако, в случае функции include() она выдает предупреждение, и PHP-скрипт продолжает работу."
        },
        {
            "question": "Назовите различные типы переменных в PHP.",
            "right_answer": "Существует восемь типов данных, используемых для создания переменных в PHP: Целые числа, Дробные числа, Логические значения, NULL, Строки, Массивы, Объекты, Ресурсы."
        },
        {
            "question": "Что мы подразумеваем под стандартом PSR? Какова его важность?",
            "right_answer": "Поскольку существуют различные стандарты кодирования между разработчиками и компаниями, можно столкнуться с проблемами при попытке исправить код другого разработчика, который может иметь другую структуру. Вот где на помощь приходит стандарт PSR. Он стандартизирует внешний вид кода, что помогает устранить проблемы и даже синтаксические ошибки в некоторых случаях."
        },
        {
            "question": "Как вы обрабатываете ошибки в PHP?",
            "right_answer": "Ошибки в PHP можно обрабатывать с помощью блоков try, catch и finally для исключений, а также функций error_reporting() и ini_set() для уровней отчетности об ошибках. Кроме того, запись ошибок в файл или базу данных является распространенной практикой."
        },
        {
            "question": "Какова роль пространств имен в PHP?",
            "right_answer": "Пространства имен в PHP предоставляют способ инкапсуляции кода и предотвращения конфликтов имен. Они позволяют разработчикам организовывать код в логические группы и улучшать читаемость и поддерживаемость кода."
        },
        {
            "question": "Каковы характеристики переменных PHP?",
            "right_answer": "Переменные PHP - это значения, хранящиеся в памяти, которые пользователь может манипулировать. Они хранят данные для определенной цели и могут использоваться в вычислениях и других процессах. Переменные PHP могут быть объявлены с ключевыми словами, такими как 'var,' 'int,' 'float,' и 'array.' После объявления переменной ее можно использовать для хранения значения."
        },
        {
            "question": "Как объединить две строки в PHP?",
            "right_answer": "Объединение двух строк в PHP просто. Для этого используйте оператор конкатенации, который представляет собой точку (.)."
        },
        {
            "question": "Как можно сравнивать объекты в PHP?",
            "right_answer": "Сравнение объектов в PHP - это ценный способ определить, равны ли две вещи. Сравнение осуществляется на основе свойств объекта и значений этих свойств. PHP предлагает встроенную функцию для сравнения объектов под названием var_dump()."
        },
        {
            "question": "Сколько типов массивов существует в PHP?",
            "right_answer": "В PHP существует три типа массивов: Индексированный массив, который представляет собой массив с числовым ключом. Ассоциативный массив, где каждому ключу соответствует свое значение. Многомерный массив содержит один или более массивов внутри себя."
        },
        {
            "question": "Что мы подразумеваем под 'escaping to PHP'?",
            "right_answer": "Движок разбора PHP должен быть способен отличать PHP-код от других элементов страницы. Механизм для достижения этого называется 'escaping to PHP'."
        },
        {
            "question": "Для чего используются сессии и куки в PHP?",
            "right_answer": "Сессии и куки являются важными в PHP, поскольку они предоставляют способ для сервера хранить информацию о взаимодействии пользователя с веб-сайтом. Сессии используются для хранения информации о сеансе пользователя, такой как статус входа и другая информация, которую веб-сайту необходимо знать. Куки хранят информацию, которую сервер может использовать для идентификации пользователя, такую как имя пользователя или пароль."
        },
        {
            "question": "Как отобразить текст с помощью PHP скрипта?",
            "right_answer": "Есть два способа сделать это: <?php echo 'Метод 1'; print 'Метод 2'; ?>"
        },
        {
            "question": "Как можно вставить PHP код на HTML страницу?",
            "right_answer": "При встраивании PHP кода в HTML файл, мы должны использовать расширение файла .php для этого файла. Это позволяет вашему веб-серверу отправить файл на обработку в PHP. Если веб-сервер настроен на использование другого расширения для файлов PHP, то это расширение должно быть использовано вместо этого. Нам нужно использовать начальные и конечные теги PHP, чтобы указать веб-серверу, где начинается и заканчивается PHP код. Существует три стиля начальных и конечных тегов, которые распознает парсер PHP."
        }
    ]
}