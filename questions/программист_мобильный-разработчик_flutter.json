{
    "category_full_form": "Программист_Мобильный разработчик_Flutter",
    "category_human_form": "Мобильный разработчик_Flutter",
    "category_filename_form": "программист_мобильный-разработчик_flutter",
    "questions": [
        {
            "question": "Как выполнить код только в режиме отладки?",
            "right_answer": "Сначала нам нужно импортировать фундамент dart, чтобы запустить код только в режиме отладки: import 'package:flutter/foundation.dart' as Foundation; Следующим шагом является использование kReleaseMode следующим образом: if (Foundation.kReleaseMode){ // это режим релиза?? print('режим релиза'); } else { print('режим отладки'); }"
        },
        {
            "question": "Что такое Flutter Inspector?",
            "right_answer": "Точно так же, как и с нативным Android, файл XML позволяет нам просматривать чертеж и свойства нашего приложения. Существует мощный инструмент под названием Flutter Inspector для приложений Flutter, который позволяет визуализировать чертеж ваших виджетов и их свойства. Используя его, вы можете диагностировать различные проблемы макета и понять текущий макет. Flutter Inspector предлагает следующие преимущества: Выбор режима виджета, Переключение платформы, Показ базовых линий рисования, Показ отладочного рисования, Обновление виджета, Включение медленной анимации, Показать/скрыть наложение производительности."
        },
        {
            "question": "Для чего используется Ticker в Flutter?",
            "right_answer": "Мы используем тикер, чтобы определить, как часто обновляется наша анимация в Flutter. Сигналы отправляются с постоянной частотой, например, 60 раз в секунду, с использованием этого типа класса отправки сигналов. Мы лучше понимаем это с нашим часами, которые постоянно тикают. Для каждого тика предоставляется метод обратного вызова, который имеет время с момента первого тика на каждую секунду с момента его запуска. Тикеры синхронизируются немедленно, даже если они начинаются в разное время."
        },
        {
            "question": "Объясните Flutter Provider.",
            "right_answer": "Провайдер создается с использованием виджетов. Вы можете использовать все объекты в провайдере так, как если бы они были просто частью Flutter с новыми подклассами виджетов, которые он создает. Это также означает, что провайдер не является кросс-платформенным. Провайдер - это самый простой способ управления состоянием. В основном он работает на концепции PUB-SUB, то есть есть один провайдер и несколько подписчиков."
        },
        {
            "question": "Какой из них лучше, Flutter или React Native?",
            "right_answer": "Сегодня тысячи мобильных приложений создаются с использованием двух самых популярных кроссплатформенных фреймворков - React Native и Flutter. Между React Native и Flutter существует много сходств, включая быструю перезагрузку, отличный пользовательский интерфейс, отличные инструменты и возможность создания нативных приложений. React Native: это полностью JavaScript-ориентированное приложение, использующее React. Facebook поддерживает и открыл его в 2015 году. Flutter: он написан на языке программирования Dart. По сравнению с React Native, Flutter является относительно новым фреймворком. Flutter изначально поддерживался другим гигантом по имени Google. Выбор между ними сложен с точки зрения разработчика."
        },
        {
            "question": "Объясните состояние приложения.",
            "right_answer": "Состояние приложения также может называться общим состоянием или состоянием приложения. Возможно делиться состояниями приложения между разделами вашего приложения и поддерживать сеансы пользователей таким же образом. Вот некоторые примеры состояния приложения: информация о входе, предпочтения пользователя, корзина покупок электронной коммерции, уведомления социальных сетей и т. д."
        },
        {
            "question": "В чем разница между runApp() и main() в Flutter?",
            "right_answer": "main()\n\nЭто функция, используемая для запуска программы. В Flutter невозможно написать программу без функции main().\n\nrunApp()\n\nОна используется для возврата виджетов, которые связаны с экраном в качестве корня дерева виджетов, которые будут отображаться на экране. Эта функция называется главной функцией и также является драйвером приложения."
        },
        {
            "question": "Является ли Flutter SDK?",
            "right_answer": "Да, Flutter - это SDK."
        },
        {
            "question": "Что вы понимаете под tween анимацией?",
            "right_answer": "Сокращенная версия анимации между кадрами - это tween анимация. Начальная и конечная точки анимации должны быть указаны в tween анимации. Используя этот метод, анимация может начинаться в начале и продвигаться через серию значений до достижения конечной точки. Скорость и продолжительность перехода также определяются с использованием tween анимации. Расчет перехода от начала до конца будет проще с использованием фреймворка виджетов."
        },
        {
            "question": "Какие основные особенности Flutter для мобильной разработки?",
            "right_answer": "Среди основных особенностей Flutter для разработки мобильных фреймворков можно выделить: гибкость, масштабируемость и интеграция; Hot Reload; единое решение; нативная производительность и интернационализированные библиотеки Flutter; огромная библиотека виджетов."
        },
        {
            "question": "Различные типы потоков в Dart",
            "right_answer": "В Dart существует два типа потоков: потоки с одноразовой подпиской и многоадресные потоки."
        },
        {
            "question": "Что вы подразумеваете под ключами в Flutter? Когда их следует использовать?",
            "right_answer": "Ключи используются в Flutter в качестве идентификаторов для виджетов, элементов и семантических узлов. GlobalKeys и LocalKeys являются подклассами Key. Внутри дерева виджетов ключи отвечают за сохранение состояния измененных виджетов. С помощью ключей вы также можете переупорядочивать и изменять коллекции виджетов, у которых есть эквивалентный тип и определенное состояние. Основное использование ключей - это изменение дерева виджетов, содержащего состояние виджетов, а не изменение дерева, полностью состоящего из виджетов без состояния."
        },
        {
            "question": "Что такое управление состоянием?",
            "right_answer": "Независимо от того, создаете ли вы мобильное приложение или веб-приложение, управление состоянием является ключевым. Используя его, состояния различных элементов управления пользовательским интерфейсом централизованы для обработки потока данных по всему приложению. Это может быть текстовое поле, радиокнопка, флажок, выпадающий список, переключатель, форма и так далее. В Flutter управление состоянием можно разделить на два типа: Временное состояние и Состояние приложения."
        },
        {
            "question": "Объясните архитектуру Flutter.",
            "right_answer": "Структура Flutter состоит из трех уровней: Верхние уровни: Платформа на основе Dart, которая отвечает за виджеты приложений, жесты, анимации, иллюстрации и материалы; Движок Flutter: Обрабатывает отображение и форматирование текста. Встроенный сервис: Используется для управления плагинами, пакетами и циклами событий."
        },
        {
            "question": "Объясните файл pubspec.yaml.",
            "right_answer": "Файл pubspec.yaml, также известный как 'pubspec', включается при создании проекта Flutter и находится в верхней части дерева проекта. Этот файл содержит информацию о зависимостях, таких как пакеты и их версии, шрифты и т. д., которые требуются для проекта. Он гарантирует, что при следующей сборке проекта вы получите ту же версию пакета. Кроме того, вы можете установить ограничения для приложения. Во время работы с проектом Flutter этот файл конфигурации проекта будет требоваться много. Эта спецификация написана на YAML, который может быть прочитан людьми. В этом файле содержатся: Общие настройки проекта, такие как название проекта, версия, описание и т. д. Зависимости в проекте. Активы проекта (например, изображения, аудио и т. д.)."
        }
    ]
}