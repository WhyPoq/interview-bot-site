{
    "category_full_form": "Программист_Frontend разработчик_CSS",
    "category_human_form": "Frontend разработчик_CSS",
    "category_filename_form": "программист_frontend-разработчик_css",
    "questions": [
        {
            "question": "Для чего используется свойство CSS transition?",
            "right_answer": "Свойство transition позволяет создавать плавные переходы между различными значениями свойств CSS в течение определенного времени. Обычно оно используется для анимации изменений размера, позиции, цвета или других свойств элемента."
        },
        {
            "question": "Что такое псевдо-элементы CSS? Приведите примеры.",
            "right_answer": "Псевдо-элементы CSS используются для стилизации конкретных частей элемента, таких как первая буква или строка. Примеры включают ::before и ::after, которые позволяют вставлять содержимое перед или после содержимого элемента, и ::first-line, который нацеливается на первую строку блочного элемента."
        },
        {
            "question": "Что такое свойство box-sizing в CSS и как оно работает?",
            "right_answer": "Свойство box-sizing контролирует как ширина и высота элемента рассчитываются. Значение по умолчанию - content-box, где ширина и высота не включают отступы и границы. Установка значения border-box включает отступы и границы в указанную ширину и высоту."
        },
        {
            "question": "Для чего используется свойство CSS float?",
            "right_answer": "Свойство float позволяет элементу выйти из нормального потока документа и быть размещенным слева или справа от своего контейнера. Обычно оно используется для создания многостолбчатых макетов или плавающих изображений в тексте."
        },
        {
            "question": "Что такое препроцессоры CSS, и зачем они полезны?",
            "right_answer": "Препроцессоры CSS, такие как Sass, Less и Stylus, являются расширениями CSS, которые предоставляют дополнительные функции, такие как переменные, миксины, вложенность и функции. Они улучшают организацию кода, повторное использование и упрощают поддержку больших кодовых баз CSS."
        },
        {
            "question": "Как можно оптимизировать CSS для повышения производительности и скорости загрузки?",
            "right_answer": "Техники оптимизации CSS включают в себя минимизацию и объединение файлов CSS, использование инструментов минификации CSS, сокращение количества HTTP-запросов путем избегания избыточных файлов CSS и использование подходящих селекторов для минимизации специфичности и улучшения производительности рендеринга."
        },
        {
            "question": "Как можно вертикально выровнять текст внутри элемента?",
            "right_answer": "Вы можете вертикально выровнять текст, используя свойство vertical-align. Однако это применяется только к элементам inline или table-cell. Для элементов уровня блока вы можете использовать CSS flexbox или CSS grid для достижения вертикального выравнивания."
        },
        {
            "question": "Как изменить цвет текста с помощью CSS?",
            "right_answer": "Вы можете изменить цвет текста, используя свойство color в CSS. Например, color: red; сделает текст красным."
        },
        {
            "question": "Что такое модель блока в CSS?",
            "right_answer": "Модель блока - это концепция в CSS, которая определяет, как элементы отображаются и структурируются. Она состоит из содержимого, отступов, границы и поля. Эти компоненты определяют общий размер и пространство элемента."
        },
        {
            "question": "Опишите идею специфичности CSS и как она работает.",
            "right_answer": "Когда на один элемент направлено множество правил, специфичность CSS определяет, какое правило будет иметь приоритет. Она рассчитывается на основе комбинации селекторов, используемых в правиле. Значение специфичности увеличивается с увеличением специфичности селектора (идентификаторы более конкретны, чем классы или теги)."
        },
        {
            "question": "Как можно выбрать элементы на основе их класса и идентификатора?",
            "right_answer": "Чтобы выбрать элементы на основе класса, вы добавляете точку перед именем класса (.) таким образом, как .my-class. Чтобы выбрать элементы на основе идентификатора, вы добавляете решетку перед именем идентификатора (#) таким образом, как #my-id."
        },
        {
            "question": "Что такое медиа-запросы CSS и как они используются?",
            "right_answer": "Медиа-запросы CSS позволяют применять различные стили на основе характеристик устройства или видового окна. Используя выражения медиа-запросов, вы можете нацеливать конкретные размеры экрана, разрешения, ориентации и многое другое для создания адаптивных дизайнов."
        },
        {
            "question": "Что такое пользовательские свойства CSS (переменные), и в чем их отличие от переменных препроцессора?",
            "right_answer": "Пользовательские свойства CSS, также известные как CSS переменные, позволяют вам определять многократно используемые значения, которые могут быть использованы во всем вашем CSS. В отличие от переменных препроцессора, CSS переменные разрешаются во время выполнения браузером."
        },
        {
            "question": "Что такое правило CSS @media и как оно используется?",
            "right_answer": "Правило @media используется для применения конкретных правил CSS на основе характеристик устройства вывода. Оно позволяет определять различные стили для различных типов медиа (например, экран, печать) или конкретных функций (например, экраны высокого разрешения)."
        },
        {
            "question": "Что такое селекторы CSS?",
            "right_answer": "Селекторы CSS - это шаблоны, используемые для выбора и стилизации конкретных элементов в документе HTML. Примеры селекторов включают селекторы элементов (p, div), селекторы классов (.my-class) и селекторы идентификаторов (#my-id)."
        }
    ]
}