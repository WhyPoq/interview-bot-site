{
    "category_full_form": "Программист_Full Stack разработчик_Backend часть_TypeScript",
    "category_human_form": "Full Stack разработчик_TypeScript",
    "category_filename_form": "программист_full-stack-разработчик_backend-часть_typescript",
    "questions": [
        {
            "question": "Что такое Mixins?",
            "right_answer": "Комбинирование более простых частичных классов - популярный подход к созданию классов из повторно используемых компонентов. Для языков, таких как Scala, вы можете быть знакомы с концепцией миксинов или характеристик. Для расширения базового класса дизайн полагается на обобщения и наследование классов. Лучшая поддержка миксинов в TypeScript предоставляется через шаблон классов-выражений. У нас есть класс, к которому применены миксины."
        },
        {
            "question": "Что такое пространство имен и как его объявить?",
            "right_answer": "Пространство имен используется для логической группировки функциональности. Для включения одной или группы связанных функций пространство имен может включать интерфейсы, классы, функции и переменные. Ключевое слово пространства имен, за которым следует имя пространства имен, может быть использовано для создания пространства имен. Фигурные скобки могут быть использованы для определения всех интерфейсов, классов и других объектов."
        },
        {
            "question": "Как вы проверите, является ли переменная null или undefined в TypeScript?",
            "right_answer": "if(value) вернет true, если значение не равно null, undefined, пусто, false, 0 или NaN."
        },
        {
            "question": "Как скомпилировать TypeScript с помощью Visual Studio Code?",
            "right_answer": "Visual Studio Code включает поддержку языка TypeScript, но не включает компилятор TypeScript. Вам нужно установить компилятор TypeScript либо глобально, либо в вашем рабочем пространстве, чтобы преобразовать исходный код TypeScript в JavaScript. Самый простой способ установить TypeScript - через npm, менеджер пакетов Node.js. Если у вас установлен npm, вы можете установить TypeScript глобально (-g) на вашем компьютере с помощью: npm install -g typescript. Вы можете проверить установку, проверив версию или помощь. tsc --version"
        },
        {
            "question": "Что такое JSX?",
            "right_answer": "Это синтаксис, похожий на XML и может быть встроенным. Его необходимо преобразовать в допустимый TypeScript. Используется файл JSX с расширением .tsx."
        },
        {
            "question": "Что такое статическая типизация?",
            "right_answer": "Статическая типизация относится к компилятору, который имеет распознаваемые переменные, аргументы и члены объекта на этапе компиляции. Это помогает в раннем обнаружении ошибок."
        },
        {
            "question": "Что означает вывод типов (Type Inference)?",
            "right_answer": "Когда вы не указываете явный тип для переменной, TypeScript может вывести его. Вывод типов - это термин для этого. Обычно это делается во время объявления, когда переменные или параметры инициализируются."
        },
        {
            "question": "Объясните массивы в TypeScript",
            "right_answer": "Коллекция значений одного типа данных называется массивом. Это тип, который был определен пользователем. Для хранения значений одного типа используются массивы. Массивы - это упорядоченные и индексированные коллекции значений. Индексация начинается с нуля, первый элемент имеет индекс 0, второй - индекс 1 и так далее."
        },
        {
            "question": "Что означает контекстуальная типизация?",
            "right_answer": "Когда одна сторона уравнения имеет тип, а другая нет, компилятор TypeScript определяет форму. Вы можете пропустить типизацию с правой стороны, потому что TypeScript сам разберется. Это сокращает время, затраченное на набор кода."
        },
        {
            "question": "Как создать объекты в TypeScript?",
            "right_answer": "Объекты - это коллекции ключей и значений, похожие на словарь. Ключи должны быть уникальными. Они напоминают массивы и иногда называются ассоциативными массивами. Массив использует числа для индексации значений, в то время как объект позволяет использовать любой тип в качестве ключа. Тип Object в TypeScript относится к любому значению с свойствами. Его можно определить просто, указав свойства и их типы."
        },
        {
            "question": "Что такое лямбда-функция?",
            "right_answer": "Для определения выражений функций TypeScript предоставляет сокращенный синтаксис. Лямбда-функция - это безымянная анонимная функция."
        },
        {
            "question": "Объясните кортежи в TypeScript на примере",
            "right_answer": "Кортежи - это коллекция значений различных типов. Они позволяют хранить множество полей различных видов. Кортежи также могут использоваться в качестве параметров функций."
        },
        {
            "question": "Можно ли использовать TypeScript для бэкенда?",
            "right_answer": "Совместив TypeScript с Node.js, бэкенд-приложения могут получить преимущества от дополнительной безопасности, которую предоставляет этот язык."
        },
        {
            "question": "Что такое Декораторы?",
            "right_answer": "Декоратор - это тип объявления, который используется для украшения объявления класса, метода, аксессора, свойства или аргумента. Декораторы имеют форму @expression, где expression должен оцениваться как функция, которая будет вызвана с информацией о украшенном объявлении при вызове во время выполнения."
        },
        {
            "question": "Объясните модули в TypeScript",
            "right_answer": "Модуль создается с целью организации кода TypeScript. Модули классифицируются как Внутренние модули и Внешние модули."
        }
    ]
}