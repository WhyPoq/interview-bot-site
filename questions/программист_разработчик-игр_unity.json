{
    "category_full_form": "Программист_Разработчик игр_Unity",
    "category_human_form": "Разработчик игр_Unity",
    "category_filename_form": "программист_разработчик-игр_unity",
    "questions": [
        {
            "question": "Может ли приватный виртуальный метод быть переопределен?",
            "right_answer": "Приватный виртуальный метод не может быть переопределен, так как он не может быть доступен за пределами класса."
        },
        {
            "question": "Что такое класс Hash table в C#?",
            "right_answer": "Класс Hash table представляет собой коллекцию пар ключ/значение, организованных на основе хэш-кода ключа."
        },
        {
            "question": "Что такое обобщения в C# .NET?",
            "right_answer": "Для уменьшения избыточности кода, повышения безопасности типов и производительности можно использовать обобщения для создания классов кода, которые могут быть повторно использованы. Классы коллекций могут быть созданы с использованием обобщений."
        },
        {
            "question": "Какова польза оператора 'using' в C#?",
            "right_answer": "Оператор 'using' может быть использован для получения ресурса для обработки перед автоматическим освобождением его по завершении выполнения."
        },
        {
            "question": "Перечислите некоторые bewt практики для Unity 3D?",
            "right_answer": "Кэширование ссылок на компоненты: Всегда кэшируйте ссылки на компоненты, которые вам нужно использовать в ваших скриптах\n Выделение памяти: Вместо мгновенного создания нового объекта, всегда рассматривайте создание и использование пулов объектов. Это поможет уменьшить фрагментацию памяти и сделает работу сборщика мусора менее интенсивной\n Слои и матрица столкновений: Для каждого нового слоя добавляется новый столбец и строка в матрицу столкновений. Эта матрица отвечает за определение взаимодействий между слоями\n Лучи: Позволяет выпустить луч в определенном направлении с определенной длиной и узнать, попал ли он во что-то\n Физика 2D 3D: Выберите физический движок, который подходит для вашей игры\n Rigidbody: Это важный компонент при добавлении физических взаимодействий между объектами\n Фиксированный шаг времени: Значение фиксированного шага времени напрямую влияет на частоту обновления fixedupdate() и физики."
        },
        {
            "question": "В чем разница между переопределением метода и перегрузкой метода?",
            "right_answer": "При переопределении метода соответствующее определение метода заменяется в производном классе, что изменяет поведение метода. Когда речь идет о перегрузке метода, создается метод с тем же именем и находится в том же классе, но имеет разные сигнатуры."
        },
        {
            "question": "Каковы характеристики Unity3D?",
            "right_answer": "Характеристики Unity: это мультиплатформенный игровой движок с функциями, такими как (3D-объекты, физика, анимация, скриптинг, освещение и т. д.) Сопровождающий редактор скриптов MonoDevelop (win/mac) Также можно использовать Visual Studio (Windows) 3D-редактор местности Менеджер анимации 3D-объектов Система GUI Множество платформ для экспорта исполняемых файлов Веб-плеер/Android/Нативное приложение/Wii В Unity 3D вы можете собирать искусство и ресурсы в сцены и окружения, добавляя спецэффекты, физику и анимацию, освещение и т. д."
        },
        {
            "question": "Укажите важные компоненты Unity 3D?",
            "right_answer": "Некоторые важные компоненты Unity 3D включают в себя панель инструментов, вид сцены, иерархию, окно проекта и вид игры."
        },
        {
            "question": "В чем разница между параметрами out и ref?",
            "right_answer": "Когда аргумент передается как ref, его нужно инициализировать перед передачей в метод. С другой стороны, параметр out не требуется инициализировать перед передачей в метод."
        },
        {
            "question": "Можно ли использовать потоки для изменения текстуры во время выполнения?",
            "right_answer": "Нет. Текстура и меши - это примеры элементов, хранящихся в памяти GPU, и Unity не позволяет другим потокам, кроме основного, вносить изменения в такие данные."
        },
        {
            "question": "Можно ли использовать команду «this» в статическом методе?",
            "right_answer": "Нет. Это потому, что только статические переменные/методы могут быть использованы в статическом методе."
        },
        {
            "question": "Объясните GameObject и Component в Unity.",
            "right_answer": "В основе Unity находятся GameObjects, которые являются строительными блоками любого игрового сценария. GameObject может представлять различные сущности, такие как персонажи, объекты, камеры, свет и многое другое. Компоненты - это элементы, присоединенные к GameObjects, чтобы определить их конкретное поведение или свойства."
        },
        {
            "question": "Почему следует использовать Time.deltaTime для правильной работы вещей, зависящих от времени?",
            "right_answer": "Приложения реального времени, такие как игры, имеют переменное количество кадров в секунду (FPS). Иногда они работают на 60FPS, или при замедлении могут работать на 40FPS или менее. Если вы хотите изменить значение от A до B за 1.0 секунды, вы не можете просто увеличить A на B-A между двумя кадрами, потому что кадры могут работать быстро или медленно, поэтому один кадр может иметь разную длительность. Правильным способом исправления этого является измерение времени, затраченного с кадра X на X+1 и увеличение A, используя это изменение с длительностью кадра deltaTime, делая A += (B-A) * DeltaTime. Когда накопленное DeltaTime достигнет 1.0 секунды, A примет значение B."
        },
        {
            "question": "Опишите контроллер анимаций Unity и рабочий процесс настройки анимаций.",
            "right_answer": "Контроллер анимаций Unity управляет анимациями персонажей через AnimationStates и переходы. Разработчики настраивают анимации, создавая AnimationClips. Они также определяют состояния и параметры в контроллере анимаций и создают переходы между состояниями на основе условий или триггеров."
        },
        {
            "question": "Что такое сериализация?",
            "right_answer": "Для передачи объекта через сеть нам нужно преобразовать его в поток байтов. Этот процесс называется сериализацией."
        }
    ]
}