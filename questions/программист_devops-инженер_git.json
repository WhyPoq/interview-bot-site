{
	"category_full_form": "Программист_DevOps инженер_Git",
	"category_human_form": "DevOps инженер_Git",
	"category_filename_form": "программист_devops-инженер_git",
	"questions": [
		{
			"question": "Что такое Git?",
			"right_answer": "Git - это распределенная система контроля версий (DVCS). Он позволяет отслеживать изменения, внесенные в файл, и позволяет вернуться к любому конкретному изменению, которое вы хотите."
		},
		{
			"question": "Как можно исправить сломанный коммит?",
			"right_answer": "Для исправления любого сломанного коммита используйте команду “git commit --amend”. При выполнении этой команды вы сможете исправить сообщение сломанного коммита в редакторе."
		},
		{
			"question": "Что такое Head в Git?",
			"right_answer": "Git поддерживает переменную для ссылки, называемую HEAD, на последний коммит в недавней ветке проверки. Поэтому, если мы делаем новый коммит в репозитории, то указатель или HEAD сместится или изменит свою позицию, чтобы указывать на новый коммит."
		},
		{
			"question": "Какая функция у ‘git stash apply’?",
			"right_answer": "Если вы хотите продолжить работу с того места, где остановились, то команда ‘git stash apply‘ используется для восстановления сохраненных изменений в текущий рабочий каталог."
		},
		{
			"question": "Что такое git reflog?",
			"right_answer": "Команда 'reflog' отслеживает каждое изменение, сделанное в ссылках (ветках или тегах) репозитория, и ведет журнал истории веток и тегов, которые были созданы локально или проверены."
		},
		{
			"question": "Расскажите о командах git reset — mixed и git merge — abort?",
			"right_answer": "git reset — mixed используется для отмены изменений, внесенных в рабочем каталоге и области подготовки. git merge — abort помогает остановить процесс слияния и вернуться к состоянию до начала слияния."
		},
		{
			"question": "Как разрешить конфликт в Git?",
			"right_answer": "Следующие шаги помогут разрешить конфликт в Git - Определите файлы, вызвавшие конфликт. Внесите необходимые изменения в файлы, чтобы конфликт не возникал снова. Добавьте эти файлы с помощью команды git add. Наконец, зафиксируйте измененный файл, используя команду git commit"
		},
		{
			"question": "Какой язык используется в Git?",
			"right_answer": "Git использует язык ‘C’. GIT работает быстро, и язык ‘C’ делает это возможным, уменьшая накладные расходы времени выполнения, связанные с языками более высокого уровня."
		},
		{
			"question": "Как отменить коммит, который уже был отправлен и сделан публичным?",
			"right_answer": "Существует два способа, с помощью которых вы можете отменить коммит: 1. Удалите или исправьте плохой файл в новом коммите и отправьте его в удаленный репозиторий. Затем зафиксируйте его в удаленном репозитории, используя: git commit -m “сообщение коммита” 2. Создайте новый коммит, чтобы отменить все изменения, сделанные в плохом коммите. Используйте следующую команду: git revert <идентификатор коммита>"
		},
		{
			"question": "Какова цель ветвления и какие типы ветвлений существуют?",
			"right_answer": "Это позволяет пользователю переключаться между ветками, чтобы сохранить текущую работу в синхронизации, не нарушая основные ветки и работы других разработчиков в соответствии с их требованиями."
		},
		{
			"question": "Как используется git instaweb?",
			"right_answer": "'git instaweb' используется для автоматического направления веб-браузера и запуска веб-сервера с интерфейсом в вашем локальном репозитории."
		},
		{
			"question": "Что такое «голый репозиторий» в Git?",
			"right_answer": "«Голый» репозиторий в Git содержит информацию о контроле версий и не содержит рабочих файлов (без дерева) и не содержит специального подкаталога .git. Вместо этого он содержит все содержимое подкаталога .git непосредственно в основном каталоге, в то время как рабочий каталог состоит из: подкаталога .git со всей связанной с Git историей ревизий вашего репозитория. Рабочее дерево или скопированные версии ваших проектных файлов."
		},
		{
			"question": "Что такое Git fork? В чем разница между fork, branch и clone?",
			"right_answer": "Форк - это копия репозитория. Обычно вы создаете форк репозитория, чтобы иметь возможность свободно экспериментировать с изменениями, не затрагивая оригинальный проект. В основном форки используются либо для предложения изменений в проекте кого-то другого, либо для использования проекта кого-то другого в качестве отправной точки для своей собственной идеи. Клонирование Git означает указание на существующий репозиторий и создание копии этого репозитория в новом каталоге, в другом месте. Оригинальный репозиторий может находиться на локальной файловой системе или на удаленной машине, доступной по поддерживаемым протоколам. Команда git clone используется для создания копии существующего репозитория Git. Простыми словами, ветки git - это отдельные проекты внутри репозитория git. Различные ветки в репозитории могут иметь совершенно разные файлы и папки, или же все может быть одинаковым, за исключением некоторых строк кода в файле."
		},
		{
			"question": "Что такое git stash drop?",
			"right_answer": "Команда Git ‘stash drop’ используется для удаления отложенного элемента. Эта команда по умолчанию удалит последний добавленный элемент в stash, и также может удалить выбранный элемент. Например, если вы хотите удалить элемент с именем stash@{example}, вы можете использовать команду: git stash drop stash@{example}."
		}
	]
}
