{
    "category_full_form": "Программист_Backend разработчик_Разработка API_RESTful API",
    "category_human_form": "Backend разработчик_RESTful API",
    "category_filename_form": "программист_backend-разработчик_разработка-api_restful-api",
    "questions": [
        {
            "question": "Что делает метод HEAD в REST API?",
            "right_answer": "Метод HEAD используется для возврата заголовка HTTP в виде только для чтения, а не тела."
        },
        {
            "question": "Как связан JAXB с RESTful веб-API?",
            "right_answer": "JAXB - это Java-архитектура, используемая для привязки XML в RESTful веб-API."
        },
        {
            "question": "Что такое URI?",
            "right_answer": "URI расшифровывается как 'Унифицированный идентификатор ресурса'."
        },
        {
            "question": "Какие наиболее распространенные коды состояния HTTP-ответа вы видите при работе с REST API?",
            "right_answer": "Некоторые из наиболее распространенных кодов состояния ответа включают 200 OK, 201 Created, 400 Bad Request, 401 Unauthorized, 403 Forbidden, 404 Not Found, 500 Internal Server Error, 502 Bad Gateway, 503 Service Unavailable и т. д."
        },
        {
            "question": "Что вы понимаете под JAX-RS?",
            "right_answer": "Это спецификация на основе Java, реализованная для RESTful сервисов и определенная JEE."
        },
        {
            "question": "Что такое CRUD?",
            "right_answer": "CRUD означает «Create, Read, Update, Delete»."
        },
        {
            "question": "Как обеспечить безопасность REST API?",
            "right_answer": "REST API можно обеспечить безопасностью с помощью мер безопасности, таких как аутентификация и авторизация, валидация сервера API, шифрование TSl/SSL, ограничение скорости для атак DDoS, и конфиденциальная информация, такая как имя пользователя, пароль или токен аутентификации, не должна быть видна в URI"
        },
        {
            "question": "В чем разница между REST и SOAP?",
            "right_answer": "REST (Representational State Transfer) - это архитектурный шаблон, используемый для разработки веб-сервисов. Он быстрее в скорости и более кэшируемый. Он наследует только меры безопасности, касающиеся протокола, которые были реализованы. SOAP (Simple Object Access Protocol) - это строгий протокол, используемый для создания безопасных API. Он медленнее в скорости и не кэшируется. Он способен определять собственные меры безопасности."
        },
        {
            "question": "Важные аспекты реализации RESTful веб-сервисов.",
            "right_answer": "ResourcesRequest, Headers, Request Body, Response Body, Status codes"
        },
        {
            "question": "В чем разница между методами POST и PUT?",
            "right_answer": "Метод POST\n\nPOST может создавать ресурс на сервере.\nPOST не является идемпотентным.\nОтветы POST можно кэшировать.\nМетод PUT\n\nPUT используется для замены ресурса по определенному URI другим ресурсом.\nPUT является идемпотентным, что приведет к созданию только одного ресурса даже после многократного вызова.\nОтветы PUT не кэшируются."
        },
        {
            "question": "Какие недостатки у RESTful веб-сервисов?",
            "right_answer": "RESTful веб-сервисы являются безсостоятельными и не поддерживают ответственность за симуляцию сеанса, поскольку сторона клиента не предоставляет для этого конкретный идентификатор сеанса. REST не способен навязывать ограничения безопасности встроенным образом. Однако он наследует их с помощью реализации протоколов. Таким образом, интеграция аутентификации SSL/TLS должна быть выполнена очень внимательно для лучших мер безопасности REST API."
        },
        {
            "question": "Что такое 'Options' в REST API?",
            "right_answer": "Это метод HTTP, используемый для получения поддерживаемых HTTP-опций или операций, которые помогают клиентам выбирать опции в REST API. Механизм Cross-Origin Resource Sharing (CORS) использует метод опции REST."
        },
        {
            "question": "Каково определение сообщений в терминах RESTful веб-сервисов?",
            "right_answer": "В веб-сервисах REST API, когда REST-клиент хочет отправить сообщение на сервер, его можно отправить в форме HTTP-запроса, и то же самое относится к серверу. Этот вид коммуникации называется обмен сообщениями в REST."
        },
        {
            "question": "Как разработать представление ресурсов для RESTful веб-сервисов?",
            "right_answer": "Оно должно быть легким для понимания клиента и сервера. Оно должно быть полным независимо от его структуры формата. Оно должно учитывать связь ресурсов с другими ресурсами и обращаться с ними бережно."
        },
        {
            "question": "Какой максимальный размер полезной нагрузки можно отправить в методах POST?",
            "right_answer": "Теоретически, нет такого максимального предела для размера полезной нагрузки, которую можно отправить в методах POST. Однако полезные нагрузки большего размера могут потреблять большую полосу пропускания. Таким образом, сервер может занять больше времени на обработку запроса."
        }
    ]
}