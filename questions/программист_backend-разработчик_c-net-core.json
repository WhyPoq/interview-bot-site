{
    "category_full_form": "Программист_Backend разработчик_C# + .NET Core",
    "category_human_form": "Backend разработчик_C# + .NET Core",
    "category_filename_form": "программист_backend-разработчик_c-net-core",
    "questions": [
        {
            "question": "Что такое Jagged Arrays?",
            "right_answer": "Массив, который состоит из элементов типа массив, называется Jagged Array. Элементы в Jagged Arrays могут иметь различные размеры и размеры."
        },
        {
            "question": "В чем разница между static, public и void?",
            "right_answer": "Объявленные как public переменные могут быть доступны откуда угодно в приложении. Объявленные как static переменные могут быть доступны глобально без необходимости создавать экземпляр класса. Void - это модификатор типа, который указывает на метод и используется для определения типа возвращаемого значения метода в C#."
        },
        {
            "question": "Как можно установить класс для наследования, но предотвратить переопределение метода?",
            "right_answer": "Чтобы установить класс для наследования, его нужно объявить как public. Метод должен быть запечатан (sealed), чтобы предотвратить любые переопределения."
        },
        {
            "question": "Как можно создать массив с нестандартными значениями?",
            "right_answer": "Массив с нестандартными значениями можно создать с помощью Enumerable.Repeat."
        },
        {
            "question": "Какова польза оператора 'using' в C#?",
            "right_answer": "Оператор 'using' может быть использован для получения ресурса для обработки перед автоматическим освобождением его по завершении выполнения."
        },
        {
            "question": "Что такое User Control и Custom Control?",
            "right_answer": "Пользовательские элементы управления создаются в виде скомпилированного кода. Их легко использовать и добавить в панель инструментов. Разработчики могут перетаскивать эти элементы управления на свои веб-формы. Пользовательские элементы управления почти такие же, как и файлы включения ASP. Их также легко создавать. Однако пользовательские элементы управления нельзя поместить в панель инструментов. Их также нельзя перетащить из нее."
        },
        {
            "question": "В чем разница между методами Dispose() и Finalize()?",
            "right_answer": "Метод Dispose() используется, когда объект должен освободить все неуправляемые ресурсы в нем. Метод Finalize(), с другой стороны, не гарантирует сборку мусора объекта, хотя он используется для той же функции."
        },
        {
            "question": "Что такое пользовательские исключения?",
            "right_answer": "В некоторых случаях ошибки должны обрабатываться в соответствии с требованиями пользователя. В таких случаях используются пользовательские исключения."
        },
        {
            "question": "Что такое классы ввода-вывода в C#?",
            "right_answer": "В C# пространство имен System.IO содержит несколько классов, которые используются для выполнения различных операций с файлами, таких как создание, удаление, закрытие и открытие."
        },
        {
            "question": "Что такое циклические ссылки?",
            "right_answer": "Когда два или более ресурса зависят друг от друга, это вызывает блокировку и ресурсы становятся непригодными к использованию. Это называется циклической ссылкой."
        },
        {
            "question": "В чем разница между блоками finalize и finalize?",
            "right_answer": "После завершения блоков try и catch вызывается блок finalize, поскольку он используется для обработки исключений. Независимо от того, было ли исключение перехвачено, этот блок кода выполняется. В целом, код в этом блоке более чистый. Прямо перед сборкой мусора вызывается метод finalize. Основные задачи метода finalize - очистка неуправляемого кода, который автоматически запускается, когда экземпляр не вызывается повторно."
        },
        {
            "question": "В чем разница между параметрами out и ref?",
            "right_answer": "Когда аргумент передается как ref, он должен быть инициализирован перед передачей в метод. Параметр out, с другой стороны, не требуется инициализировать перед передачей в метод."
        },
        {
            "question": "Что такое многопоточность с .NET?",
            "right_answer": "Многопоточность относится к использованию нескольких потоков в одном процессе. Каждый поток здесь выполняет разные функции."
        },
        {
            "question": "В чем разница между 'throw' и 'throw ex' в .NET?",
            "right_answer": "'Throw' оператор сохраняет исходный стек ошибок. Но 'throw ex' сохраняет стек вызовов с места выброса исключения."
        },
        {
            "question": "Что такое LINQ в C#?",
            "right_answer": "LINQ означает Language Integrated Query. Он предоставляет .NET-языкам (например, C#) возможность генерировать запросы для извлечения данных из источника данных."
        }
    ]
}