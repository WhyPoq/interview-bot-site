{
    "category_full_form": "Программист_DevOps инженер_Работа с базами данных",
    "category_human_form": "DevOps инженер_Работа с базами данных",
    "category_filename_form": "программист_devops-инженер_работа-с-базами-данных",
    "questions": [
        {
            "question": "Объясните планы по восстановлению после катастрофы, которые вы разработали, и как они были протестированы для обеспечения эффективности.",
            "right_answer": "Как администратор баз данных, планы восстановления после катастрофы являются ключевыми для обеспечения непрерывности бизнеса. На моем текущем месте работы я разработал комплексный план восстановления после катастрофы, который включает процедуры резервного копирования и восстановления, роли и обязанности по реагированию на катастрофы, а также протоколы тестирования. Процедуры резервного копирования и восстановления: Первым шагом в моем плане восстановления после катастрофы является обеспечение регулярного резервного копирования всех критически важных данных. Я реализовал стратегию резервного копирования, которая включает еженедельные полные резервные копии и ежедневные инкрементные резервные копии для минимизации потери данных в случае катастрофы. Эти резервные копии хранятся в защищенном месте за пределами офиса, чтобы обеспечить их безопасность. Кроме того, я разработал план восстановления, который включает процедуры восстановления данных, восстановления баз данных и проверки целостности восстановленных данных. Роли и обязанности по реагированию на катастрофы: В случае катастрофы крайне важно, чтобы каждый понимал свою роль и обязанности. Я разработал план реагирования, который определяет роли каждого члена команды и шаги, которые каждый должен предпринять в случае катастрофы. Этот план регулярно обновляется и дополняется с участием всех членов команды для обеспечения его эффективности. Протоколы тестирования: План восстановления после катастрофы эффективен только в том случае, если он был протестирован и доказан своей работоспособностью. Я разработал протокол тестирования, который включает как симуляции восстановления после катастрофы, так и регулярные тесты восстановления данных. Мы проводим ежегодную симуляцию восстановления после катастрофы, где мы симулируем сценарий катастрофы и практикуем наш план реагирования. Кроме того, мы регулярно проводим тесты восстановления данных для обеспечения целостности наших резервных копий и процедур восстановления. В результате мы смогли восстановить все критически важные данные с минимальными потерями данных и простоем. В целом, мой план восстановления после катастрофы был успешен в обеспечении непрерывности бизнес-операций в случае катастрофы. Благодаря регулярному тестированию и обновлениям мы смогли минимизировать потери данных и простои, обеспечивая дальнейший успех нашего бизнеса."
        },
        {
            "question": "Как вы остаётесь в курсе развития отрасли и вопросов безопасности баз данных?",
            "right_answer": "Как преданный администратор баз данных, оставаться в курсе развития отрасли и вопросов безопасности баз данных является неотъемлемой частью моей работы. Для того чтобы быть информированным, я следую различным стратегиям, включая посещение отраслевых конференций, чтение отраслевых публикаций, участие в онлайн форумах и группах, прохождение сертификаций и участие в вебинарах и тренингах."
        },
        {
            "question": "Что такое DBMS?",
            "right_answer": "DBMS означает Система Управления Базами Данных. Это набор прикладных программ, которые позволяют пользователю организовывать, восстанавливать и извлекать информацию о данных эффективно и максимально эффективно. Некоторые из популярных DBMS: MySql, Oracle, Sybase и т. д."
        },
        {
            "question": "Каковы недостатки запроса?",
            "right_answer": "Недостатки запроса:\n\n- Индексы отсутствуют.\n- Хранимые процедуры чрезмерно компилируются.\n- Сложности в интерфейсе."
        },
        {
            "question": "Назовите различные модели данных, доступные для баз данных.",
            "right_answer": "Различные модели данных: Реляционная модель, Сетевая модель, Иерархическая модель"
        },
        {
            "question": "Что вы понимаете под уникальным ключом?",
            "right_answer": "Уникальный ключ - это то же самое, что и первичный ключ, каждая строка данных которого уникально идентифицируется с разницей в значении NULL, т.е. уникальный ключ позволяет одно значение в качестве значения NULL."
        },
        {
            "question": "Объясните Первичный ключ и Составной ключ.",
            "right_answer": "Первичный ключ - это столбец таблицы, данные каждой строки которого уникально идентифицируются. В каждой строке таблицы должен быть первичный ключ, и ни две строки не могут иметь одинаковый первичный ключ. Значение первичного ключа никогда не может быть пустым или изменено. Составной ключ - это форма кандидатского ключа, где набор столбцов уникально идентифицирует каждую строку в таблице."
        },
        {
            "question": "Что такое RDBMS?",
            "right_answer": "Система управления реляционными базами данных (RDBMS) основана на реляционной модели данных, которая хранится в базах данных в отдельных таблицах и связана с использованием общего столбца. Данные могут быть легко получены из реляционной базы данных с использованием языка структурированных запросов (SQL)."
        },
        {
            "question": "Перечислите преимущества СУБД.",
            "right_answer": "Преимущества СУБД включают: Данные хранятся структурированным образом, что позволяет контролировать избыточность. Проверяет введенные данные и обеспечивает ограничения на несанкционированный доступ к базе данных. Обеспечивает резервное копирование и восстановление данных по необходимости. Предоставляет множество пользовательских интерфейсов."
        },
        {
            "question": "Что такое контрольная точка?",
            "right_answer": "Контрольная точка объявляет точку, до которой все журналы хранятся постоянно на диске хранения и находятся в несогласованном состоянии. В случае сбоев, количество работы и времени сохраняется, так как система может перезапуститься с контрольной точки."
        },
        {
            "question": "Когда функциональная зависимость считается полностью функционально зависимой?",
            "right_answer": "Для того чтобы соответствовать критериям полной функциональной зависимости, отношение должно удовлетворять требованию функциональной зависимости. Функциональная зависимость 'A' и 'B' считается полностью функционально зависимой, когда удаление любого атрибута, скажем 'X', из 'A' означает, что зависимость больше не существует."
        },
        {
            "question": "Что такое хранилище данных?",
            "right_answer": "Хранение и доступ к данным, полученным из транзакций и других источников, из центрального места для проведения анализа, называется хранилищем данных."
        },
        {
            "question": "Можете ли вы объяснить ситуацию, когда вам пришлось устранять проблемы с синхронизацией баз данных?",
            "right_answer": "Во время моего предыдущего места работы я был ответственен за управление базой данных, которая использовалась несколькими отделами в компании. Однажды я получил отчеты о том, что определенные отделы не могли получить доступ к самым актуальным данным. После расследования я понял, что данные не были правильно синхронизированы на всех серверах. Сначала я проверил журналы базы данных, чтобы выявить корень проблемы. Проанализировав журналы, я выяснил, что процесс репликации остановился из-за сбоя в сети. Затем я перезапустил процесс репликации и инициировал синхронизацию между узлами, чтобы убедиться, что все данные были обновлены. После успешного завершения синхронизации я протестировал базу данных, запустив запрос, чтобы убедиться, что все отделы могут получить доступ к обновленным данным. Наконец, я задокументировал предпринятые шаги и поделился ими с ИТ-командой, чтобы избежать подобных проблем в будущем. В результате все отделы смогли получить доступ к обновленным данным без дополнительных проблем. Решение проблемы заняло у меня около 2 часов. Мое быстрое устранение неполадок помогло компании предотвратить финансовые или операционные потери из-за несоответствий данных."
        },
        {
            "question": "В чем разница между кластерным и не кластерным индексом?",
            "right_answer": "Кластеризованный индекс изменяет таблицу и переупорядочивает способ хранения записей в таблице. Получение данных становится быстрее при использовании кластеризованного индекса. Некластеризованный индекс не изменяет записи, хранящиеся в таблице, но создает совершенно другой объект внутри таблицы."
        },
        {
            "question": "В чем разница между командами ‘DELETE’, ‘TRUNCATE’ и ‘DROP’?",
            "right_answer": "После выполнения операции ‘DELETE’ можно выполнить операции COMMIT и ROLLBACK, чтобы восстановить потерянные данные. После выполнения операции ‘TRUNCATE’ нельзя выполнить операции COMMIT и ROLLBACK для восстановления потерянных данных. Команда ‘DROP’ используется для удаления таблицы или ключа, таких как первичный ключ/внешний ключ."
        }
    ]
}