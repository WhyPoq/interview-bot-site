{
    "category_full_form": "Программист_Full Stack разработчик_RESTful Services/APIs",
    "category_human_form": "Full Stack разработчик_RESTful Services/APIs",
    "category_filename_form": "программист_full-stack-разработчик_restful-servicesapis",
    "questions": [
        {
            "question": "Какие языки разметки используются для представления ресурсов в REST API?",
            "right_answer": "Ресурсы в REST API представляются с помощью XML (расширяемый язык разметки) и JSON (JavaScript Object Notation)."
        },
        {
            "question": "Что такое REST?",
            "right_answer": "REST расшифровывается как Representational State Transfer."
        },
        {
            "question": "Что такое CRUD?",
            "right_answer": "CRUD означает «Create, Read, Update, Delete»."
        },
        {
            "question": "Какой пример использования REST API в реальном мире?",
            "right_answer": "Публичные REST API используются погодными приложениями для отображения информации о погоде и обмена связанными данными. Авиакомпании используют API для предоставления информации о времени и ценах на рейсы для сайтов по путешествиям и продаже билетов для бизнеса. Службы общественного транспорта используют API для открытия своих данных для общественности и доступа к ним для приложений картографии и навигации в реальном времени."
        },
        {
            "question": "Что вы понимаете под JAX-RS?",
            "right_answer": "Это спецификация на основе Java, реализованная для RESTful-сервисов и определенная JEE."
        },
        {
            "question": "Что такое кэширование в REST API?",
            "right_answer": "REST API сохраняет копию ответа сервера в определенном месте памяти компьютера, чтобы быстро получить ответ сервера в будущем. Этот метод является временным и называется 'кэшированием'."
        },
        {
            "question": "Важные аспекты реализации RESTful веб-сервисов.",
            "right_answer": "ResourcesRequest, Заголовки, Тело запроса, Тело ответа, Коды состояния"
        },
        {
            "question": "Объясните 'Адресацию' в RESTful веб-сервисах.",
            "right_answer": "Процесс нахождения различных типов ресурсов с помощью URL на сервере REST известен как 'адресация' в RESTful веб-сервисах. Обычно, ресурсы адресуются одним или несколькими ресурсами."
        },
        {
            "question": "Каковы особенности RESTful веб-сервисов?",
            "right_answer": "RESTful веб-сервисы имеют следующие уникальные особенности: разделение клиент-сервер, поддержка коммуникации, легковесность, унифицированный интерфейс, отсутствие состояния, слоистая система, возможность кэширования, код по требованию"
        },
        {
            "question": "Какие существуют различные стили интеграции приложений?",
            "right_answer": "Различные стили интеграции приложений включают в себя: Общая база данных, Пакетная передача файлов, Вызов удаленной процедуры (RPC) и Обмен асинхронными сообщениями через посредника сообщений (MOM)."
        },
        {
            "question": "Каковы недостатки RESTful веб-сервисов?",
            "right_answer": "RESTful веб-сервисы являются безсостоятельными и не поддерживают ответственность за симуляцию сеанса, поскольку сторона клиента не предоставляет для этого конкретный идентификатор сеанса. REST не способен навязывать ограничения безопасности встроенным образом. Однако он наследует их с помощью реализации протоколов. Таким образом, интеграцию аутентификации SSL/TLS необходимо проводить очень внимательно для лучших мер безопасности REST API."
        },
        {
            "question": "Что такое 'Ресурс'?",
            "right_answer": "'Ресурс' определяется как объект типа, который включает изображение, HTML-файл, текстовые данные и любой тип динамических данных."
        },
        {
            "question": "Что такое 'Options' в REST API?",
            "right_answer": "Это метод HTTP, используемый для получения поддерживаемых HTTP-опций или операций, которые помогают клиентам выбирать опции в REST API. Механизм Cross-Origin Resource Sharing (CORS) использует метод опции REST."
        },
        {
            "question": "В чем разница между методами POST и PUT?",
            "right_answer": "Метод POST\n\nPOST может создавать ресурс на сервере.\nPOST не является идемпотентным.\nОтветы POST можно кэшировать.\nМетод PUT\n\nPUT используется для замены ресурса по определенному URI другим ресурсом.\nPUT является идемпотентным, что приведет к созданию только одного ресурса даже после многократного вызова.\nОтветы PUT не кэшируются."
        },
        {
            "question": "Как обеспечить безопасность REST API?",
            "right_answer": "REST API можно обеспечить безопасностью с помощью мер безопасности, таких как аутентификация и авторизация, валидация сервера API, шифрование TSl/SSL, ограничение скорости для атак DDoS, и конфиденциальная информация, такая как имя пользователя, пароль или токен аутентификации, не должна быть видна в URI"
        }
    ]
}