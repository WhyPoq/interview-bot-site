{
	"category_full_form": "Программист_DevOps инженер_Управление инфраструктурой как кодом (IaC)",
	"category_human_form": "DevOps инженер_Управление инфраструктурой как кодом (IaC)",
	"category_filename_form": "программист_devops-инженер_управление-инфраструктурой-как-кодом-iac",
	"questions": [
		{
			"question": "Какие самые полезные команды Terraform?",
			"right_answer": "Некоторые из самых полезных команд Terraform: terraform init, terraform refresh, terraform output, terraform apply, terraform destroy, terraform graph, terraform plan"
		},
		{
			"question": "Что такое Terraform Core? Назовите некоторые основные обязанности.",
			"right_answer": "Terraform Core - это бинарный файл, написанный статически скомпилированный с использованием языка программирования Go. Скомпилированный бинарный файл предоставляет точку входа для пользователей Terraform. Основные обязанности включают: чтение и интерполяцию модулей и файлов конфигурации с использованием функциональностей инфраструктуры как код, построение графа ресурсов, взаимодействие с плагинами через RPC, выполнение плана, управление состоянием ресурсов."
		},
		{
			"question": "Зачем используется Terraform для DevOps?",
			"right_answer": "Terraform использует язык конфигурации, похожий на JSON, называемый HashiCorp Configuration Language (HCL). HCL имеет очень простой синтаксис, который облегчает командам DevOps определение и обеспечение конфигураций инфраструктуры на различных облаках и локальных центрах обработки данных."
		},
		{
			"question": "Назовите все системы контроля версий, поддерживаемые Terraform",
			"right_answer": "Поддерживаемые системы контроля версий: Azure DevOps Services, Azure DevOps Server, Bitbucket Server, Bitbucket Cloud, Gitlab EE и CE, Gitlab.com, GitHub Enterprise, GitHub.com (OAuth), GitHub.com"
		},
		{
			"question": "Какие существуют уровни применения Sentinel?",
			"right_answer": "У Sentinel есть три уровня применения - консультативный, мягкий обязательный и жесткий обязательный."
		},
		{
			"question": "Объясните Oracle Cloud Infrastructure.",
			"right_answer": "Облачный сервис Oracle, предоставляемый корпорацией Oracle, предоставляет хранение, серверы, приложения, услуги и сети через глобальную сеть управляемых центров обработки данных корпорации Oracle. Эти услуги предоставляются по требованию через Интернет компанией."
		},
		{
			"question": "Объясните назначение Terraform CLI и перечислите некоторые основные команды CLI?",
			"right_answer": "Интерфейс командной строки Terraform (CLI) используется для управления инфраструктурой и взаимодействия с состоянием Terraform, файлами конфигурации, провайдерами и т. д. Вот некоторые основные команды CLI: terraform init - подготавливает ваш рабочий каталог для других команд, terraform destroy - уничтожает ранее созданную инфраструктуру, terraform validate - проверяет, является ли конфигурация допустимой, terraform apply - создает или обновляет инфраструктуру, terraform plan - показывает изменения, необходимые для текущей конфигурации."
		},
		{
			"question": "Что такое Граф ресурсов в Terraform?",
			"right_answer": "Граф ресурсов - это визуальное представление ресурсов. Он помогает одновременно изменять и создавать независимые ресурсы. Terraform устанавливает план для конфигурации графа для создания планов и обновления состояния. Он создает структуру наиболее эффективно и эффективно, чтобы помочь нам понять недостатки."
		},
		{
			"question": "Каковы компоненты архитектуры Terraform?",
			"right_answer": "Архитектура Terraform включает в себя следующие функции: Sub-graphs, Expression Evaluation, Vertex Evaluation, Graph Walk, Graph Builder, State Manager, Configuration Loader, CLI (интерфейс командной строки), Backend"
		},
		{
			"question": "Возможны ли обратные вызовы с помощью Terraform на Azure?",
			"right_answer": "Используя Azure Event Hubs, обратные вызовы вероятны на Azure. Поставщик Azure Terraform предоставляет пользователям простую функциональность. Оболочка облака Microsoft Azure уже установила экземпляр Terraform."
		},
		{
			"question": "Каковы преимущества и недостатки использования IaC?",
			"right_answer": "Преимущества использования IaC: Согласованность, Масштабируемость, Эффективность, Снижение затрат. Недостатки использования IaC: Крутой кривой обучения, Стоимость владения, Сложность, Управление версиями."
		},
		{
			"question": "Что вы понимаете под terraform backend?",
			"right_answer": "Каждая конфигурация Terraform может указать бэкенд, который определяет две основные вещи: где выполняются операции и где хранится состояние (Terraform отслеживает все созданные ресурсы в файле состояния)"
		},
		{
			"question": "Как заблокировать версии модулей Terraform?",
			"right_answer": "Проверенным способом блокировки версии модуля Terraform является использование реестра модулей Terraform в качестве источника. Мы можем использовать атрибут 'version' в модуле файла конфигурации Terraform. Поскольку репозиторий Github используется в качестве источника, нам нужно указать версии, ветвь и строку запроса с '?ref'."
		},
		{
			"question": "Какие встроенные провиженеры доступны в Terraform?",
			"right_answer": "Вот список встроенных провиженеров в Terraform: Salt-masterless Provisioner, Remote-exec Provisioner, Puppet Provisioner, Local-exec Provisioner, Habitat Provisioner, File Provisioner, Chef Provisioner"
		}
	]
}
