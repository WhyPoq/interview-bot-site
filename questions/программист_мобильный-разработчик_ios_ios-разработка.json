{
	"category_full_form": "Программист_Мобильный разработчик_iOS_iOS разработка",
	"category_human_form": "Мобильный разработчик_iOS",
	"category_filename_form": "программист_мобильный-разработчик_ios_ios-разработка",
	"questions": [
		{
			"question": "Каково назначение deinit в Swift?",
			"right_answer": "Деинициализация в Swift - это метод деаллокации или очистки неиспользуемых объектов экземпляров класса для освобождения памяти, используемой машинными ресурсами для более эффективного управления памятью. До тех пор, пока экземпляр класса не будет деаллоцирован, процесс деинициализации обычно называется."
		},
		{
			"question": "Какие функции добавлены в iOS 16?",
			"right_answer": "Следующие функции добавлены в iOS 16: настройка экрана блокировки, режим Фокуса, общая библиотека фотографий iCloud, приложение для продуктивности Freeform, улучшения в функциях Messages и Mail, улучшения в Maps, обновления в Safari, функция Visual Look-Up, улучшения в настройках конфиденциальности и безопасности, улучшения в доступности, возможности редактирования фотографий в Photos и улучшения в приложении Погода."
		},
		{
			"question": "В чем разница между Cocoa и Cocoa Touch?",
			"right_answer": "Cocoa Touch - результат объединения фреймворков Foundation и AppKit, в то время как Cocoa - результат объединения фреймворков Foundation и UIKit. Для построения стеков API Cocoa и Cocoa Touch находятся поверх других наборов приложений. Медиа, основные службы и CoreOS - другие слои."
		},
		{
			"question": "Что такое GCD?",
			"right_answer": "GCD расшифровывается как Grand Central Dispatch. Это низкоуровневый API, который позволяет управлять несколькими параллельными операциями. Он поможет вам увеличить отзывчивость вашего приложения, откладывая вычислительно интенсивные задачи в контекст. Это более простая модель параллелизма, чем блокировки и потоки."
		},
		{
			"question": "Что такое метод swizzling?",
			"right_answer": "Метод swizzling - это техника в разработке под iOS, которая позволяет вам изменить реализацию метода во время выполнения. Она включает в себя замену реализации одного метода другим, обычно внутри класса или его подклассов. С помощью метода swizzling вы можете изменить поведение существующих методов, не изменяя их оригинальную реализацию напрямую. Эта техника часто используется для добавления функциональности, переопределения поведения или перехвата вызовов методов в приложениях для iOS."
		},
		{
			"question": "Укажите несколько ключевых особенностей платформы iOS.",
			"right_answer": "Ключевые особенности платформы iOS следующие: Возможности многозадачности, iCloud используется для хранения данных в облаке, к которым можно получить доступ с любого другого устройства Apple, на котором вошли в систему под своим ID, iOS - закрытая система, что означает, что исходный код приложений Apple недоступен для разработчиков, Беспрепятственная интеграция с другими устройствами Apple."
		},
		{
			"question": "Что такое NSError в Swift?",
			"right_answer": "Класс NSError является классом Cocoa. Знание об ошибочном состоянии инкапсулируется в расширяемом, объектно-ориентированном способе с помощью объекта NSError. Он включает в себя предопределенную область ошибок, специфический для области код ошибки и словарь с данными пользователя с приложением."
		},
		{
			"question": "В чем разница между KVC и KVO?",
			"right_answer": "KVC (Key-Value Coding) - это метод доступа к свойствам объекта с использованием строк во время выполнения, а необходимость знать имена свойств статически на этапе разработки. KVO (Key-Value Observing) позволяет контроллеру или классу отслеживать изменения значения свойства. В KVO объект может запросить уведомление обо всех изменениях в определенном свойстве, и наблюдатель автоматически уведомляется, если значение этого свойства изменяется."
		},
		{
			"question": "Что такое безымянные категории?",
			"right_answer": "Категория без имени больше не приветствуется с расширением @protocol для поддержки необязательных методов. Мы используем расширение класса @interface Foo(), чтобы объявить дополнительный закрытый API, известный как системный программный интерфейс (SPI), который используется для реализации внутренних механизмов класса. Это объявление обычно размещается в начале файла .m. Все методы и свойства, объявленные в расширении класса, должны быть реализованы в @implementation, аналогично методам и свойствам, найденным в общедоступном @interface. Классовые расширения также позволяют изменить общедоступное свойство только для чтения @property на доступное для чтения и записи перед использованием @synthesize на аксессорах."
		},
		{
			"question": "Что такое plist?",
			"right_answer": "Свойственный список или plist относится к списку, который организует данные в именованные значения и списки значений, используя несколько типов объектов. Эти типы предоставляют нам средства для создания данных, которые имеют осмысленную структуру, могут быть транспортированы, сохранены и доступны, но при этом остаются максимально эффективными. Свойственные списки часто используются приложениями, работающими как на Mac OS X, так и на iOS. Программные интерфейсы свойственных списков для Cocoa и Core Foundation позволяют нам преобразовывать иерархически структурированные комбинации этих базовых типов объектов в стандартный XML и обратно. Мы можем сохранить данные XML на диск и затем использовать их для восстановления исходных объектов. Система пользовательских настроек, к которой мы программно обращаемся через класс NSUserDefaults, использует свойственные списки для хранения объектов, представляющих пользовательские предпочтения. Это ограничение, казалось бы, исключает многие виды объектов, такие как объекты NSColor и NSFont, из системы пользовательских настроек. Однако, если объекты соответствуют протоколу NSCoding, их можно архивировать в объекты NSData, которые совместимы со свойственными списками."
		},
		{
			"question": "Что такое оператор Guard?",
			"right_answer": "Если одно или несколько требований не выполняются, оператор Guard используется для передачи управления программы из области. Преимущества оператора Guard следующие: это еще один способ безопасного извлечения опционалов, он обеспечивает ранний выход, он избегает пирамид ада. Оператор Guard записывается следующим образом: guard condition else { statements }"
		},
		{
			"question": "Что такое параллельное выполнение?",
			"right_answer": "Параллельное выполнение - это модный термин для «запуска нескольких задач одновременно». На устройствах iOS параллельное выполнение часто используется для выполнения задач, таких как загрузка или обработка данных в фоновом режиме, сохраняя при этом чувствительность вашего пользовательского интерфейса."
		},
		{
			"question": "Что такое Swift и что такое Objective-C?",
			"right_answer": "Swift - это современный язык программирования, созданный Apple для приложений iOS, OS X, watchOS и tvOS, который объединяет лучшее из C и Objective-C, но без проблем совместимости с C. Swift следует безопасным шаблонам программирования, а также включает современные функции, чтобы сделать программирование проще, более универсальным и приятным. Swift приветствует новичков в программировании и знаком разработчикам Objective-C. Основным языком программирования для написания приложений для OS X и iOS является Objective-C. Это объектно-ориентированный язык программирования с динамическим временем выполнения, который является надмножеством языка программирования C. Objective-C берет синтаксис C, примитивные типы и операторы управления потоком и добавляет синтаксис определения класса и процесса."
		}
	]
}
