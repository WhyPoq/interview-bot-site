{
    "category_full_form": "Программист_Full Stack разработчик_Frontend часть_Angular",
    "category_human_form": "Full Stack разработчик_Angular",
    "category_filename_form": "программист_full-stack-разработчик_frontend-часть_angular",
    "questions": [
        {
            "question": "Что происходит, когда мы используем тег script внутри шаблона?",
            "right_answer": "Использование тега script внутри шаблона Angular не рекомендуется. Шаблоны Angular предназначены для определения структуры и макета пользовательского интерфейса, и включение скриптов непосредственно в шаблон противоречит принципу разделения ответственности. Когда тег script используется внутри шаблона, браузер рассматривает его как часть HTML-контента и пытается выполнить его. Однако компилятор шаблонов Angular не обрабатывает и не выполняет скрипты внутри шаблонов. Вместо этого скрипты должны быть размещены в отдельных файлах JavaScript и включены с использованием соответствующих механизмов Angular, таких как логика компонента или модули Angular."
        },
        {
            "question": "Что такое Сервисы в Angular?",
            "right_answer": "Сервисы Angular выполняют задачи, которые используются несколькими компонентами. Эти задачи могут включать получение данных и изображений, сетевые подключения и управление базами данных, среди прочего. Они выполняют все операционные задачи для компонентов и избегают повторного написания кода. Сервис можно написать один раз и внедрить во все компоненты, которые используют этот сервис."
        },
        {
            "question": "Что такое интерфейс PipeTransform?",
            "right_answer": "Как следует из названия, интерфейс принимает входное значение и преобразует его в нужный формат с помощью метода transform(). Обычно используется для реализации пользовательских каналов."
        },
        {
            "question": "Что такое декораторы классов?",
            "right_answer": "Декораторы классов в Angular - это тип декоратора, который можно применить к объявлению класса. Они используются для изменения поведения класса или добавления дополнительной функциональности. Декораторы классов определяются с использованием символа @, за которым следует имя декоратора, и размещаются непосредственно перед объявлением класса. Их можно использовать для различных целей, таких как добавление метаданных, применение миксинов или расширение функциональности класса."
        },
        {
            "question": "Что такое Шаблонные и Реактивные формы?",
            "right_answer": "Подход, основанный на шаблонах\n\nВ этом методе используется обычный тег формы для создания форм. Angular автоматически интерпретирует и создает объект представления формы для тега. Элементы управления могут быть добавлены к форме с использованием тега NGModel. Несколько элементов управления могут быть сгруппированы с использованием модуля NGControlGroup. Значение формы может быть сгенерировано с использованием объекта «form.value». Данные формы экспортируются в виде значений JSON при вызове метода отправки. Для валидации полей формы могут использоваться базовые HTML-проверки. В случае необходимости пользовательских проверок могут использоваться директивы. Можно утверждать, что этот метод является самым простым способом создания приложения Angular. Подход с Реактивными формами\n\nЭтот подход ориентирован на программную парадигму потоков данных и распространение изменений. С Реактивными формами компонент напрямую управляет потоками данных между элементами управления формой и моделями данных. Реактивные формы основаны на коде, в отличие от подхода, основанного на шаблонах. Реактивные формы отходят от традиционного декларативного подхода. Реактивные формы устраняют анти-паттерн обновления модели данных через двустороннее связывание данных. Обычно создание элементов управления Реактивной формы синхронно и может быть протестировано с использованием синхронных техник программирования."
        },
        {
            "question": "Что такое модуль загрузки?",
            "right_answer": "Модуль загрузки в Angular - это основная точка входа в приложение Angular. Он отвечает за запуск приложения и инициализацию корневого компонента. Модуль загрузки обычно определяется в файле main.ts и настраивается в Angular AppModule. Он настраивает необходимую среду, загружает необходимые модули и вызывает платформу Angular для запуска приложения. Модуль загрузки играет ключевую роль в жизненном цикле приложения Angular."
        },
        {
            "question": "Что такое контроллеры?",
            "right_answer": "Контроллеры AngularJS управляют данными приложений AngularJS. Они являются обычными объектами JavaScript. Директива ng-controller определяет контроллер приложения."
        },
        {
            "question": "Что такое TypeScript?",
            "right_answer": "TypeScript - это надмножество JavaScript, которое обеспечивает отличную последовательность. Он настоятельно рекомендуется, поскольку предоставляет некоторый синтаксический сахар и делает код более удобным для понимания и поддержки. В конечном итоге, код TypeScript компилируется в JavaScript, который может эффективно работать в любой среде."
        },
        {
            "question": "В чем разница между AOT и JIT?",
            "right_answer": "Компиляция Ahead of Time (AOT) преобразует ваш код во время сборки перед тем, как браузер загрузит и запустит этот код. Это обеспечивает более быстрое отображение в браузере. Чтобы указать компиляцию AOT, включите опцию --aot с командой ng build или ng serve. Процесс компиляции Just-in-Time (JIT) - это способ компиляции компьютерного кода в машинный код во время выполнения или времени выполнения. Он также известен как динамическая компиляция. JIT-компиляция является значением по умолчанию при выполнении команд CLI ng build или ng serve."
        },
        {
            "question": "Что такое операторы шаблона?",
            "right_answer": "Операторы шаблона - это свойства или методы, используемые в HTML для реагирования на события пользователя. С помощью этих операторов шаблона приложение, которое вы создаете или работаете, может иметь возможность взаимодействовать с пользователями через действия, такие как отправка форм и отображение динамического контента."
        },
        {
            "question": "Что такое Promises и Observables в Angular?",
            "right_answer": "Хотя оба концепта имеют дело с асинхронными событиями в Angular, Promises обрабатывают одно событие за раз, в то время как observables обрабатывают последовательность событий в течение некоторого времени. Promises испускают одно значение за раз, выполняются сразу после создания и не могут быть отменены. Observables выполняются только при подписке на них с помощью метода subscribe(), испускают несколько значений за определенный период времени и позволяют выполнять операции, такие как forEach, filter и retry. Они передают ошибки подписчикам и могут быть отписаны с помощью метода unsubscribe()."
        },
        {
            "question": "Что такое шаблоны в Angular?",
            "right_answer": "Шаблоны Angular написаны с использованием HTML, который содержит специфические для Angular элементы и атрибуты. В сочетании с информацией модели и контроллера, эти шаблоны дополнительно рендерятся для предоставления динамического представления пользователю."
        },
        {
            "question": "Что такое ngModule?",
            "right_answer": "NgModules - это контейнеры, которые резервируют блок кода для домена приложения или рабочего процесса. @NgModule принимает объект метаданных, который обычно описывает способ компиляции шаблона компонента и создания инжектора во время выполнения. Кроме того, он идентифицирует компоненты, директивы и каналы модуля, делая некоторые из них общедоступными через свойство экспорта, чтобы внешние компоненты могли их использовать."
        },
        {
            "question": "Что означает Angular Material?",
            "right_answer": "Angular Material - это библиотека компонентов пользовательского интерфейса для приложений Angular. Она предоставляет набор готовых и настраиваемых компонентов пользовательского интерфейса, таких как кнопки, формы, навигационные меню и диалоговые окна, которые следуют рекомендациям Material Design. Angular Material упрощает процесс создания последовательных и визуально привлекательных пользовательских интерфейсов в Angular. Она предлагает широкий спектр функций и стилей, которые легко интегрируются в проекты Angular."
        },
        {
            "question": "Что такое router links?",
            "right_answer": "Router links в Angular используются для навигации в приложении. Они определяются с помощью директивы routerLink и предоставляют способ навигации по различным маршрутам или компонентам. Router links могут использоваться в HTML-шаблонах и обычно размещаются на якорных (<a>) тегах или других элементах, по которым можно кликнуть. Указывая целевой маршрут или компонент, router links позволяют пользователям перемещаться между различными частями приложения Angular."
        }
    ]
}