{
    "category_full_form": "Программист_DevOps инженер_CI/CD",
    "category_human_form": "DevOps инженер_CI/CD",
    "category_filename_form": "программист_devops-инженер_cicd",
    "questions": [
        {
            "question": "Что такое Git?",
            "right_answer": "Созданный Линусом Торвальдсом для поддержки открытой разработки Linux, Git является самым популярным инструментом контроля версий. Он использует распределенную модель репозитория, которая может эффективно обрабатывать проекты любого размера."
        },
        {
            "question": "Объясните платформу контейнеров OpenShift.",
            "right_answer": "Платформа контейнеров OpenShift - это сервис PAAS, предлагаемый RedHat, ранее называвшийся OpenShift Enterprises. Кроме того, Open Shift предлагает автомасштабирование, самовосстановление и приложения с высокой доступностью без необходимости настраивать их вручную в традиционной среде, даже если они находятся на месте или в облаке. Платформа OpenShift поддерживает широкий спектр языков программирования с открытым исходным кодом, предоставляя разработчикам выбор полиглота."
        },
        {
            "question": "Как долго должна существовать ветка?",
            "right_answer": "В контексте непрерывной интеграции ветки должны следовать практикам разработки на основе ствола и, следовательно, быть краткосрочными. Идеально, ветка должна существовать всего несколько часов или, в крайнем случае, один день."
        },
        {
            "question": "Что такое инженер CI/CD?",
            "right_answer": "Инженеры CI/CD могут улучшить интеграцию и работу инструментов CI/CD, а также гарантировать качество интеграционных систем от начала до конца. Инженеры CI/CD будут поддерживать мотивацию команд и возглавлять работу по CI/CD. Ответственность инженера CI/CD заключается в том, чтобы гарантировать правильную работу инструментов и платформ CI/CD в организации. Инженеры CI/CD понимают, как оптимизировать процессы разработки и выпуска своих команд."
        },
        {
            "question": "Что такое покрытие тестами?",
            "right_answer": "Покрытие тестами - это метрика, которая измеряет, насколько кодовая база покрыта тестами. 100% покрытие означает, что каждая строка кода проверяется как минимум одним тестовым случаем."
        },
        {
            "question": "Требуется ли для CI/CD знание какого-либо языка программирования?",
            "right_answer": "Что касается CI/CD, для его использования не требуется знание какого-либо языка программирования или языка сценариев. Не обязательно использовать какой-либо язык программирования или сценариев при использовании инструмента на основе графического интерфейса, такого как Azure DevOps (ADO). Использование шаблонов ARM в Azure DevOps требует знания сценариев. Поэтому все зависит от инструментов и различных способов настройки CI/CD."
        },
        {
            "question": "Каково различие между хостингом и облачной платформой CI/CD?",
            "right_answer": "Хостинговый CI-сервер должен управляться как любой другой сервер. Сначала его необходимо установить, настроить и поддерживать. Обновления и патчи должны быть применены для обеспечения безопасности сервера. Наконец, сбои в CI-сервере могут блокировать разработку и останавливать развертывание. С другой стороны, облачная платформа CI не требует обслуживания. Нет необходимости устанавливать или настраивать что-либо, поэтому организации могут сразу начать использовать их. Облачное хранилище предоставляет всю необходимую мощность, поэтому масштабируемость не является проблемой. Наконец, надежность платформы гарантирована SLA."
        },
        {
            "question": "Какие лучшие инструменты тестирования в непрерывном тестировании?",
            "right_answer": "Неотъемлемой частью конвейера CI/CD является непрерывное тестирование (CT). Разработчики поддерживают его, так как оно быстро устраняет ошибки. Это гарантирует, что независимо от количества выпусков, опыт конечного пользователя остается неизменным. Несмотря на ускоренные процессы, CT служит сетью безопасности, которая сохраняет опыт конечного пользователя. Он должен быть бесшовно интегрирован в конвейер поставки программного обеспечения, поскольку это непрерывный процесс. Вот топовые инструменты тестирования, используемые в непрерывном тестировании: Testsigma, Selenium, IBM Rational Functional Tester, Tricentis Tosca, UFT (Unified Functional Testing)"
        },
        {
            "question": "Что такое система контроля версий?",
            "right_answer": "Система контроля версий - это набор практик и инструментов для управления кодовыми базами. Разработчики используют систему контроля версий для отслеживания каждой строки кода, а также для обмена, рецензирования и синхронизации изменений в команде."
        },
        {
            "question": "Можете ли вы объяснить ветку Git?",
            "right_answer": "Ветка Git в основном является отдельной линией разработки, которая может использоваться для работы над конкретной функцией, обычно во время разработки. Использование веток позволяет разработчикам писать код, не мешая работе других членов команды."
        },
        {
            "question": "Какие инструменты контроля версий, кроме git, вы знаете?",
            "right_answer": "Mercurial, Subversion (SVN), Concurrent Version Systems (CVS), Perforce, Bazaar, Bitkeeper, Fossil"
        },
        {
            "question": "Объясните Docker.",
            "right_answer": "Как следует из его названия, Docker - это платформа контейнеризации, которая упаковывает приложения и их зависимости вместе в контейнеры, чтобы гарантировать бесперебойную работу приложений в различных средах. Контейнеры Docker - это целые файловые системы, которые содержат все компоненты для запуска программного обеспечения: код, системные инструменты, среду выполнения, системные библиотеки и т. д. Любое программное обеспечение, которое можно установить на сервер, можно упаковать в контейнер Docker. Это гарантирует, что программное обеспечение всегда работает одинаково в любой среде."
        },
        {
            "question": "Что вы понимаете под стратегией Rolling?",
            "right_answer": "Постепенное развертывание обновляет работающие экземпляры приложения с новыми релизами по мере их выпуска. Процесс включает замену старых версий приложения новыми версиями приложения путем замены всей инфраструктуры, на которой работает приложение"
        },
        {
            "question": "Что такое разработка на основе ствола?",
            "right_answer": "Разработка на основе ствола - это модель ветвления, где большая часть работы выполняется в одном стволе, обычно называемом стволом, мастером или главным. Ствол ежедневно получает слияния от всех разработчиков в команде. Разработка на основе ствола - популярная модель разработки, потому что она упрощает контроль версий. Поскольку ствол является единственным источником правды, эта модель минимизирует вероятность конфликтов при слиянии."
        },
        {
            "question": "Назовите несколько типов тестов, используемых в разработке программного обеспечения",
            "right_answer": "Существует больше типов тестов, чем мы можем пересчитать на пальцах обеих рук, но наиболее распространенные из них: модульные тесты, интеграционные тесты, тесты end-to-end, статические тесты, тесты безопасности, тесты smoke"
        }
    ]
}